{"ast":null,"code":"import ENV from'./../config.js';var API_HOST=ENV.api_host;// Get all list ids and names of currently logged in user\nexport var get_all_lists=function get_all_lists(app){var url=\"\".concat(API_HOST,\"/get_all_lists\");fetch(url).then(function(res){if(res.status===200){return res.json();}}).then(function(json){app.setState({lists:json});}).catch(function(error){console.log(error);});};// Post a new list of the current user to the DB\nexport var create_list=function create_list(appList,listName,category,listDescription,permissions){var request=new Request(\"\".concat(API_HOST,\"/create_list\"),{method:\"post\",body:JSON.stringify({\"listName\":listName,\"category\":category,\"listDescription\":listDescription,\"permissions\":permissions}),headers:{Accept:\"application/json, text/plain, */*\",\"Content-Type\":\"application/json\"}});return fetch(request).then(function(res){if(res.status===200){return res.json();}}).then(function(json){var newList=appList.state.lists.push({\"id\":json._id,\"listName\":json.listName});appList.setState({list:newList});return\"success\";}).catch(function(error){console.log(error);});};export var get_all_items=function get_all_items(app,listId){var url=\"\".concat(API_HOST,\"/get_a_list/\")+listId;fetch(url).then(function(res){if(res.status===200){return res.json();}}).then(function(json){app.setState({ListName:json.listName,ListDescription:json.listDescription,Category:json.category,FoodRank:json.items});}).catch(function(error){console.log(error);});};export var add_item=function add_item(app,listId){var url=\"\".concat(API_HOST,\"/add_item\")+listId;var request=new Request(url,{method:\"post\",body:JSON.stringify({\"listName\":listName,\"category\":category,\"listDescription\":listDescription,\"permissions\":permissions}),headers:{Accept:\"application/json, text/plain, */*\",\"Content-Type\":\"application/json\"}});return fetch(request).then(function(res){if(res.status===200){return res.json();}}).then(function(json){return\"success\";}).catch(function(error){console.log(error);});};","map":{"version":3,"sources":["/Users/valeriewirianto/University Stuff/309/Group/team50/client/src/actions/myList.js"],"names":["ENV","API_HOST","api_host","get_all_lists","app","url","fetch","then","res","status","json","setState","lists","catch","error","console","log","create_list","appList","listName","category","listDescription","permissions","request","Request","method","body","JSON","stringify","headers","Accept","newList","state","push","_id","list","get_all_items","listId","ListName","ListDescription","Category","FoodRank","items","add_item"],"mappings":"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","sourcesContent":["import ENV from './../config.js'\nconst API_HOST = ENV.api_host\n\n// Get all list ids and names of currently logged in user\nexport const get_all_lists= (app) => {\n    const url = `${API_HOST}/get_all_lists`;\n    fetch(url)\n        .then(res => {\n            if (res.status === 200) {\n                return res.json()\n            }\n        })\n        .then(json =>{\n            app.setState({lists: json})\n        })\n        .catch(error => {\n            console.log(error);\n        });\n};\n\n// Post a new list of the current user to the DB\nexport const create_list = (appList, listName, category, listDescription, permissions) => {\n    const request = new Request(`${API_HOST}/create_list`, {\n        method: \"post\",\n        body: JSON.stringify({\"listName\": listName,\n        \"category\": category,\n        \"listDescription\": listDescription,\n        \"permissions\": permissions\n        }),\n        headers: {\n            Accept: \"application/json, text/plain, */*\",\n            \"Content-Type\": \"application/json\"\n        }\n    });\n\n    return fetch(request)\n        .then(res => {\n            if (res.status === 200) {\n                return res.json();\n            }\n        })\n        .then(json => {\n            const newList = appList.state.lists.push({\"id\": json._id, \"listName\": json.listName})\n            appList.setState({\n                list: newList\n            })\n            return \"success\"\n        })\n        .catch(error => {\n            console.log(error);\n        });\n}\n\nexport const get_all_items = (app, listId) => {\n    const url = `${API_HOST}/get_a_list/` +  listId;\n    fetch(url)\n        .then(res => {\n            if (res.status === 200) {\n                return res.json()\n            }\n        })\n        .then(json =>{\n            app.setState({ ListName: json.listName, ListDescription: json.listDescription, Category: json.category, FoodRank: json.items })\n        })\n        .catch(error => {\n            console.log(error);\n        });\n}\n\nexport const add_item = (app, listId) => {\n    const url = `${API_HOST}/add_item` + listId;\n\n    const request = new Request(url, {\n        method: \"post\",\n        body: JSON.stringify({\"listName\": listName,\n        \"category\": category,\n        \"listDescription\": listDescription,\n        \"permissions\": permissions\n        }),\n        headers: {\n            Accept: \"application/json, text/plain, */*\",\n            \"Content-Type\": \"application/json\"\n        }\n    });\n\n    return fetch(request)\n    .then(res => {\n        if (res.status === 200) {\n            return res.json();\n        }\n    })\n    .then(json => {\n        return \"success\"\n    })\n    .catch(error => {\n        console.log(error);\n    });\n\n}"]},"metadata":{},"sourceType":"module"}