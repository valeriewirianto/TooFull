{"ast":null,"code":"import _regeneratorRuntime from\"/Users/valeriewirianto/University Stuff/309/Group/team50/client/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/valeriewirianto/University Stuff/309/Group/team50/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import ENV from'./../config.js';var API_HOST=ENV.api_host;// Get all list ids and names of currently logged in user\nexport var get_all_lists=function get_all_lists(app){var url=\"\".concat(API_HOST,\"/get_all_lists\");fetch(url).then(function(res){if(res.status===200){return res.json();}}).then(function(json){app.setState({lists:json});}).catch(function(error){console.log(error);});};// Post a new list of the current user to the DB\nexport var create_list=function create_list(appList,listName,category,listDescription,permissions){var request=new Request(\"\".concat(API_HOST,\"/create_list\"),{method:\"post\",body:JSON.stringify({\"listName\":listName,\"category\":category,\"listDescription\":listDescription,\"permissions\":permissions}),headers:{Accept:\"application/json, text/plain, */*\",\"Content-Type\":\"application/json\"}});return fetch(request).then(function(res){if(res.status===200){return res.json();}}).then(function(json){var newList=appList.state.lists.push({\"id\":json._id,\"listName\":json.listName});appList.setState({list:newList});return\"success\";}).catch(function(error){console.log(error);});};export var get_all_items=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(app,listId){var url;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:url=\"\".concat(API_HOST,\"/get_a_list/\")+listId;_context.next=3;return fetch(url).then(function(res){if(res.status===200){return res.json();}}).then(function(json){app.setState({ListName:\"1\",ListDescription:json.listDescription,Category:json.category,FoodRank:json.items});}).catch(function(error){console.log(error);});case 3:case\"end\":return _context.stop();}}},_callee);}));return function get_all_items(_x,_x2){return _ref.apply(this,arguments);};}();// adds a new item to a list, does not update ranks of other items\nexport var add_item=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(app,popUpState,listId){var url,request;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:url=\"\".concat(API_HOST,\"/add_item/\")+listId;request=new Request(url,{method:\"post\",body:JSON.stringify({\"rank\":popUpState.rank,\"foodName\":popUpState.foodName,\"notes\":popUpState.notes}),headers:{Accept:\"application/json, text/plain, */*\",\"Content-Type\":\"application/json\"}});_context2.next=4;return fetch(request).then(function(res){if(res.status===200){return res.json();}}).then(function(json){//console.log(json.items)\n//const newItem = app.state.FoodRank.push({\"id\": json._id, \"foodName\": json.foodName, \"rank\": json.rank, \"notes:\": json.notes})\n// console.log(json._id)\n// console.log(json.foodName)\n// console.log(json.rank)\n// console.log(json.notes)\n// app.state.FoodRank.push({\"id\": json._id, \"foodName\": json.foodName, \"rank\": json.rank, \"notes:\": json.notes})\n// app.setState({\n//       FoodRank: json.items\n// })\nreturn\"success\";}).catch(function(error){console.log(error);});case 4:return _context2.abrupt(\"return\",_context2.sent);case 5:case\"end\":return _context2.stop();}}},_callee2);}));return function add_item(_x3,_x4,_x5){return _ref2.apply(this,arguments);};}();// modify multiple items in a list, used for when an item is added and ranks of other items must be modified\nexport var modify_multiple_items=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(app,newItemList,listId){var url,newList;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:url=\"\".concat(API_HOST,\"/modify_item/\")+listId;console.log(url);console.log(newItemList);_context3.next=5;return newItemList.map(function(item){console.log(item._id);var request=new Request(url,{method:\"post\",body:JSON.stringify({\"rank\":item.rank,\"foodName\":item.foodName,\"notes\":item.notes,\"item_id\":item._id}),headers:{Accept:\"application/json, text/plain, */*\",\"Content-Type\":\"application/json\"}});fetch(request).then(function(res){if(res.status===200){return res.json();}}).then(function(json){console.log(json.items);newList=json.items;// app.setState({\n//     FoodRank: newList\n// })\n}).catch(function(error){console.log(error);});});case 5:case\"end\":return _context3.stop();}}},_callee3);}));return function modify_multiple_items(_x6,_x7,_x8){return _ref3.apply(this,arguments);};}();export var delete_list=function delete_list(listId){var request=new Request(\"\".concat(API_HOST,\"/delete_list/\")+listId,{method:\"delete\",headers:{Accept:\"application/json, text/plain, */*\",\"Content-Type\":\"application/json\"}});return fetch(request).then(function(res){if(res.status===200){return res.json();}}).then(function(json){return\"success\";}).catch(function(error){console.log(error);});};export var update_list_description=function update_list_description(listId,newDescription){var request=new Request(\"\".concat(API_HOST,\"/edit_description/\")+listId,{method:\"post\",body:JSON.stringify({listDescription:newDescription}),headers:{Accept:\"application/json, text/plain, */*\",\"Content-Type\":\"application/json\"}});return fetch(request).then(function(res){if(res.status===200){return res.json();}}).then(function(json){return\"success\";}).catch(function(error){console.log(error);});};","map":{"version":3,"sources":["/Users/valeriewirianto/University Stuff/309/Group/team50/client/src/actions/myList.js"],"names":["ENV","API_HOST","api_host","get_all_lists","app","url","fetch","then","res","status","json","setState","lists","catch","error","console","log","create_list","appList","listName","category","listDescription","permissions","request","Request","method","body","JSON","stringify","headers","Accept","newList","state","push","_id","list","get_all_items","listId","ListName","ListDescription","Category","FoodRank","items","add_item","popUpState","rank","foodName","notes","modify_multiple_items","newItemList","map","item","delete_list","update_list_description","newDescription"],"mappings":"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","sourcesContent":["import ENV from './../config.js'\nconst API_HOST = ENV.api_host\n\n// Get all list ids and names of currently logged in user\nexport const get_all_lists= (app) => {\n    const url = `${API_HOST}/get_all_lists`;\n    fetch(url)\n        .then(res => {\n            if (res.status === 200) {\n                return res.json()\n            }\n        })\n        .then(json =>{\n            app.setState({lists: json})\n        })\n        .catch(error => {\n            console.log(error);\n        });\n};\n\n// Post a new list of the current user to the DB\nexport const create_list = (appList, listName, category, listDescription, permissions) => {\n    const request = new Request(`${API_HOST}/create_list`, {\n        method: \"post\",\n        body: JSON.stringify({\"listName\": listName,\n        \"category\": category,\n        \"listDescription\": listDescription,\n        \"permissions\": permissions\n        }),\n        headers: {\n            Accept: \"application/json, text/plain, */*\",\n            \"Content-Type\": \"application/json\"\n        }\n    });\n\n    return fetch(request)\n        .then(res => {\n            if (res.status === 200) {\n                return res.json();\n            }\n        })\n        .then(json => {\n            const newList = appList.state.lists.push({\"id\": json._id, \"listName\": json.listName})\n            appList.setState({\n                list: newList\n            })\n            return \"success\"\n        })\n        .catch(error => {\n            console.log(error);\n        });\n}\n\nexport const get_all_items = async (app, listId) => {\n    const url = `${API_HOST}/get_a_list/` +  listId;\n    await fetch(url)\n        .then(res => {\n            if (res.status === 200) {\n                return res.json()\n            }\n        })\n        .then(json =>{\n            app.setState({ ListName: \"1\", ListDescription: json.listDescription, Category: json.category, FoodRank: json.items })\n        })\n        .catch(error => {\n            console.log(error);\n        });\n}\n\n// adds a new item to a list, does not update ranks of other items\nexport const add_item = async (app, popUpState, listId) => {\n    const url = `${API_HOST}/add_item/` + listId;\n\n    const request = new Request(url, {\n        method: \"post\",\n        body: JSON.stringify({\n            \"rank\": popUpState.rank,\n            \"foodName\": popUpState.foodName,\n            \"notes\": popUpState.notes\n        }),\n        headers: {\n            Accept: \"application/json, text/plain, */*\",\n            \"Content-Type\": \"application/json\"\n        }\n    });\n\n    return await fetch(request)\n    .then(res => {\n        if (res.status === 200) {\n            return res.json();\n        }\n    })\n    .then(json => {\n        //console.log(json.items)\n\n\n        //const newItem = app.state.FoodRank.push({\"id\": json._id, \"foodName\": json.foodName, \"rank\": json.rank, \"notes:\": json.notes})\n        // console.log(json._id)\n        // console.log(json.foodName)\n        // console.log(json.rank)\n        // console.log(json.notes)\n       // app.state.FoodRank.push({\"id\": json._id, \"foodName\": json.foodName, \"rank\": json.rank, \"notes:\": json.notes})\n        // app.setState({\n        //       FoodRank: json.items\n        // })\n        return \"success\"\n    })\n    .catch(error => {\n        console.log(error);\n    });\n}\n\n\n// modify multiple items in a list, used for when an item is added and ranks of other items must be modified\nexport const modify_multiple_items = async (app, newItemList, listId) => {\n    const url = `${API_HOST}/modify_item/` + listId;\n    console.log(url)\n    console.log(newItemList)\n\n    let newList;\n\n    await newItemList.map(item => {\n        console.log(item._id)\n            const request = new Request(url, {\n                method: \"post\",\n                body: JSON.stringify({\n                    \"rank\": item.rank,\n                    \"foodName\": item.foodName,\n                    \"notes\": item.notes,\n                    \"item_id\": item._id\n                }),\n                headers: {\n                    Accept: \"application/json, text/plain, */*\",\n                    \"Content-Type\": \"application/json\"\n                }\n            });\n        \n            fetch(request)\n            .then(res => {\n                if (res.status === 200) {\n                     return res.json();\n                }\n            })\n            .then(json => {\n                console.log(json.items)\n                newList = json.items\n                // app.setState({\n                //     FoodRank: newList\n                // })\n            })\n            .catch(error => {\n                console.log(error);\n            });\n\n    })\n    \n    \n\n\n}\n\nexport const delete_list = (listId) => {\n    const request = new Request(`${API_HOST}/delete_list/` + listId, {\n        method: \"delete\",\n        headers: {\n            Accept: \"application/json, text/plain, */*\",\n            \"Content-Type\": \"application/json\"\n        }\n    });\n\n    return fetch(request)\n        .then(res => {\n            if (res.status === 200) {\n                return res.json();\n            }\n        })\n        .then(json => {\n            \n            return \"success\"\n        })\n        .catch(error => {\n            console.log(error);\n        });\n}\n\nexport const update_list_description = (listId, newDescription) => {\n    const request = new Request(`${API_HOST}/edit_description/` + listId, {\n        method: \"post\",\n        body: JSON.stringify({ listDescription: newDescription}),\n        headers: {\n            Accept: \"application/json, text/plain, */*\",\n            \"Content-Type\": \"application/json\"\n        }\n    });\n\n    return fetch(request)\n        .then(res => {\n            if (res.status === 200) {\n                return res.json();\n            }\n        })\n        .then(json => {\n            \n            return \"success\"\n        })\n        .catch(error => {\n            console.log(error);\n        });\n}"]},"metadata":{},"sourceType":"module"}