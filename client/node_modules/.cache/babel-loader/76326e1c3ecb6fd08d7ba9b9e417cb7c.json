{"ast":null,"code":"import ENV from'./../config.js';var API_HOST=ENV.api_host;//send a friend request\nexport var send_friend_request=function send_friend_request(app,username){var request=new Request(\"\".concat(API_HOST,\"/add_potential_friend\"),{method:\"post\",body:JSON.stringify({\"username\":username}),headers:{Accept:\"application/json, text/plain, */*\",\"Content-Type\":\"application/json\"}});fetch(request).then(function(res){if(res.status===200){return res.json();}}).then(function(json){// if(json.message){\n//     app.setState({username_exist : json.message})\n// }\n}).catch(function(error){console.log(error);});};export var add_existing_friend=function add_existing_friend(app,username){var request=new Request(\"\".concat(API_HOST,\"/add_existing_friend\"),{method:\"post\",body:JSON.stringify({\"username\":username}),headers:{Accept:\"application/json, text/plain, */*\",\"Content-Type\":\"application/json\"}});fetch(request).then(function(res){if(res.status===200){return res.json();}}).then(function(json){app.setState({ExistingFriendsList:json.existing_friends});app.setState({PotentialFriendsList:json.potential_friends});}).catch(function(error){console.log(error);});};export var delete_existing_friend=function delete_existing_friend(app,username){var request=new Request(\"\".concat(API_HOST,\"/delete_existing_friend\"),{method:\"delete\",body:JSON.stringify({\"username\":username}),headers:{Accept:\"application/json, text/plain, */*\",\"Content-Type\":\"application/json\"}});fetch(request).then(function(res){if(res.status===200){return res.json();}}).then(function(json){app.setState({ExistingFriendsList:json.existing_friends});app.setState({PotentialFriendsList:json.potential_friends});}).catch(function(error){console.log(error);});};export var delete_potential_friend=function delete_potential_friend(app,username){var request=new Request(\"\".concat(API_HOST,\"/delete_potential_friend\"),{method:\"delete\",body:JSON.stringify({\"username\":username}),headers:{Accept:\"application/json, text/plain, */*\",\"Content-Type\":\"application/json\"}});fetch(request).then(function(res){if(res.status===200){return res.json();}}).then(function(json){app.setState({ExistingFriendsList:json.existing_friends});app.setState({PotentialFriendsList:json.potential_friends});}).catch(function(error){console.log(error);});};export var get_friend_list=function get_friend_list(app){var url=\"\".concat(API_HOST,\"/get_a_friend\");fetch(url).then(function(res){if(res.status===200){return res.json();}}).then(function(json){app.setState({ExistingFriendsList:json.existing_friends});app.setState({PotentialFriendsList:json.potential_friends});}).catch(function(error){console.log(error);});};//delete existing friend\n//accept potential friend\n//reject potential friend","map":{"version":3,"sources":["/Users/valeriewirianto/University Stuff/309/Group/team50/client/src/actions/friend.js"],"names":["ENV","API_HOST","api_host","send_friend_request","app","username","request","Request","method","body","JSON","stringify","headers","Accept","fetch","then","res","status","json","catch","error","console","log","add_existing_friend","setState","ExistingFriendsList","existing_friends","PotentialFriendsList","potential_friends","delete_existing_friend","delete_potential_friend","get_friend_list","url"],"mappings":"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","sourcesContent":["import ENV from './../config.js'\nconst API_HOST = ENV.api_host\n\n//send a friend request\nexport const send_friend_request = (app, username) => {\n    const request = new Request(`${API_HOST}/add_potential_friend`, {\n        method: \"post\",\n        body: JSON.stringify({\n            \"username\": username,\n        }),\n        headers: {\n            Accept: \"application/json, text/plain, */*\",\n            \"Content-Type\": \"application/json\"\n        }\n    });\n    fetch(request)\n        .then(res => {\n            if (res.status === 200) {\n                return res.json()\n            }\n        })\n        .then(json =>{\n            // if(json.message){\n            //     app.setState({username_exist : json.message})\n            // }\n        })\n        .catch(error => {\n            console.log(error);\n        });\n\n}\n\nexport const add_existing_friend =  (app,username) => {\n    const request = new Request(`${API_HOST}/add_existing_friend`, {\n        method: \"post\",\n        body: JSON.stringify({\n            \"username\": username,\n        }),\n        headers: {\n            Accept: \"application/json, text/plain, */*\",\n            \"Content-Type\": \"application/json\"\n        }\n    });\n\n    fetch(request)\n        .then(res => {\n            if (res.status === 200) {\n                return res.json()\n            }\n        })\n        .then(json =>{\n            app.setState({ExistingFriendsList : json.existing_friends})\n            app.setState({PotentialFriendsList : json.potential_friends})\n        })\n        .catch(error => {\n            console.log(error);\n        });\n}\n\nexport const delete_existing_friend =  (app,username) => {\n    const request = new Request(`${API_HOST}/delete_existing_friend`, {\n        method: \"delete\",\n        body: JSON.stringify({\n            \"username\": username,\n        }),\n        headers: {\n            Accept: \"application/json, text/plain, */*\",\n            \"Content-Type\": \"application/json\"\n        }\n    });\n\n    fetch(request)\n        .then(res => {\n            if (res.status === 200) {\n                return res.json()\n            }\n        })\n        .then(json =>{\n            app.setState({ExistingFriendsList : json.existing_friends})\n            app.setState({PotentialFriendsList : json.potential_friends})\n        })\n        .catch(error => {\n            console.log(error);\n        });\n}\n\nexport const delete_potential_friend =  (app,username) => {\n    const request = new Request(`${API_HOST}/delete_potential_friend`, {\n        method: \"delete\",\n        body: JSON.stringify({\n            \"username\": username,\n        }),\n        headers: {\n            Accept: \"application/json, text/plain, */*\",\n            \"Content-Type\": \"application/json\"\n        }\n    });\n\n    fetch(request)\n        .then(res => {\n            if (res.status === 200) {\n                return res.json()\n            }\n        })\n        .then(json =>{\n            app.setState({ExistingFriendsList : json.existing_friends})\n            app.setState({PotentialFriendsList : json.potential_friends})\n        })\n        .catch(error => {\n            console.log(error);\n        });\n}\n\nexport const get_friend_list = (app)=>{\n    const url = `${API_HOST}/get_a_friend`\n    fetch(url)\n        .then(res => {\n            if (res.status === 200) {\n                return res.json()\n            }\n        })\n        .then(json =>{\n            app.setState({ExistingFriendsList : json.existing_friends})\n            app.setState({PotentialFriendsList : json.potential_friends})\n        })\n        .catch(error => {\n            console.log(error);\n        });\n\n}\n\n\n//delete existing friend\n\n\n//accept potential friend\n\n//reject potential friend\n\n\n\n"]},"metadata":{},"sourceType":"module"}