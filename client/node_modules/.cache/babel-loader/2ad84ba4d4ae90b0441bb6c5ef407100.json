{"ast":null,"code":"import ENV from './../config.js';\nconst API_HOST = ENV.api_host; //send a friend request\n\nexport const send_friend_request = (app, username) => {\n  const request = new Request(`${API_HOST}/add_potential_friend`, {\n    method: \"post\",\n    body: JSON.stringify({\n      \"username\": username\n    }),\n    headers: {\n      Accept: \"application/json, text/plain, */*\",\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  return fetch(request).then(res => {\n    if (res.status === 404) {\n      return res.json();\n    }\n\n    if (res.status === 200) {\n      return res.json();\n    }\n  }).then(json => {\n    if (json) {\n      return json.message;\n    }\n  }).catch(error => {\n    console.log(error);\n  });\n};\nexport const add_existing_friend = (app, username) => {\n  const request = new Request(`${API_HOST}/add_existing_friend`, {\n    method: \"post\",\n    body: JSON.stringify({\n      \"username\": username\n    }),\n    headers: {\n      Accept: \"application/json, text/plain, */*\",\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  fetch(request).then(res => {\n    if (res.status === 200) {\n      return res.json();\n    }\n  }).then(json => {\n    app.setState({\n      ExistingFriendsList: json.existing_friends\n    });\n    app.setState({\n      PotentialFriendsList: json.potential_friends\n    });\n    app.setState({\n      ExistingFriendsList_id: json.existing_friends_id\n    });\n    app.setState({\n      PotentialFriendsList_id: json.potential_friends_id\n    });\n  }).catch(error => {\n    console.log(error);\n  });\n};\nexport const delete_existing_friend = (app, username) => {\n  const request = new Request(`${API_HOST}/delete_existing_friend`, {\n    method: \"delete\",\n    body: JSON.stringify({\n      \"username\": username\n    }),\n    headers: {\n      Accept: \"application/json, text/plain, */*\",\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  fetch(request).then(res => {\n    if (res.status === 200) {\n      return res.json();\n    }\n  }).then(json => {\n    app.setState({\n      ExistingFriendsList: json.existing_friends\n    });\n    app.setState({\n      PotentialFriendsList: json.potential_friends\n    });\n    app.setState({\n      ExistingFriendsList_id: json.existing_friends_id\n    });\n    app.setState({\n      PotentialFriendsList_id: json.potential_friends_id\n    });\n  }).catch(error => {\n    console.log(error);\n  });\n};\nexport const delete_potential_friend = (app, username) => {\n  const request = new Request(`${API_HOST}/delete_potential_friend`, {\n    method: \"delete\",\n    body: JSON.stringify({\n      \"username\": username\n    }),\n    headers: {\n      Accept: \"application/json, text/plain, */*\",\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  fetch(request).then(res => {\n    if (res.status === 200) {\n      return res.json();\n    }\n  }).then(json => {\n    app.setState({\n      ExistingFriendsList: json.existing_friends\n    });\n    app.setState({\n      PotentialFriendsList: json.potential_friends\n    });\n    app.setState({\n      ExistingFriendsList_id: json.existing_friends_id\n    });\n    app.setState({\n      PotentialFriendsList_id: json.potential_friends_id\n    });\n  }).catch(error => {\n    console.log(error);\n  });\n};\nexport const get_friend_list = app => {\n  const url = `${API_HOST}/get_a_friend`;\n  fetch(url).then(res => {\n    if (res.status === 200) {\n      return res.json();\n    }\n  }).then(json => {\n    app.setState({\n      ExistingFriendsList: json.existing_friends\n    });\n    app.setState({\n      PotentialFriendsList: json.potential_friends\n    });\n    app.setState({\n      ExistingFriendsList_id: json.existing_friends_id\n    });\n    app.setState({\n      PotentialFriendsList_id: json.potential_friends_id\n    });\n  }).catch(error => {\n    console.log(error);\n  });\n}; //delete existing friend\n//accept potential friend\n//reject potential friend","map":{"version":3,"sources":["/Users/valeriewirianto/University Stuff/309/Group/team50/client/src/actions/friend.js"],"names":["ENV","API_HOST","api_host","send_friend_request","app","username","request","Request","method","body","JSON","stringify","headers","Accept","fetch","then","res","status","json","message","catch","error","console","log","add_existing_friend","setState","ExistingFriendsList","existing_friends","PotentialFriendsList","potential_friends","ExistingFriendsList_id","existing_friends_id","PotentialFriendsList_id","potential_friends_id","delete_existing_friend","delete_potential_friend","get_friend_list","url"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,gBAAhB;AACA,MAAMC,QAAQ,GAAGD,GAAG,CAACE,QAArB,C,CAEA;;AACA,OAAO,MAAMC,mBAAmB,GAAG,CAACC,GAAD,EAAMC,QAAN,KAAmB;AAClD,QAAMC,OAAO,GAAG,IAAIC,OAAJ,CAAa,GAAEN,QAAS,uBAAxB,EAAgD;AAC5DO,IAAAA,MAAM,EAAE,MADoD;AAE5DC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjB,kBAAYN;AADK,KAAf,CAFsD;AAK5DO,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,mCADH;AAEL,sBAAgB;AAFX;AALmD,GAAhD,CAAhB;AAUA,SAAOC,KAAK,CAACR,OAAD,CAAL,CACFS,IADE,CACGC,GAAG,IAAI;AACT,QAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACpB,aAAOD,GAAG,CAACE,IAAJ,EAAP;AACH;;AACD,QAAIF,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACpB,aAAOD,GAAG,CAACE,IAAJ,EAAP;AACH;AACJ,GARE,EASFH,IATE,CASGG,IAAI,IAAI;AACV,QAAIA,IAAJ,EAAS;AACL,aAAOA,IAAI,CAACC,OAAZ;AACH;AACJ,GAbE,EAcFC,KAdE,CAcIC,KAAK,IAAI;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,GAhBE,CAAP;AAmBH,CA9BM;AAgCP,OAAO,MAAMG,mBAAmB,GAAI,CAACpB,GAAD,EAAKC,QAAL,KAAkB;AAClD,QAAMC,OAAO,GAAG,IAAIC,OAAJ,CAAa,GAAEN,QAAS,sBAAxB,EAA+C;AAC3DO,IAAAA,MAAM,EAAE,MADmD;AAE3DC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjB,kBAAYN;AADK,KAAf,CAFqD;AAK3DO,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,mCADH;AAEL,sBAAgB;AAFX;AALkD,GAA/C,CAAhB;AAWAC,EAAAA,KAAK,CAACR,OAAD,CAAL,CACKS,IADL,CACUC,GAAG,IAAI;AACT,QAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACpB,aAAOD,GAAG,CAACE,IAAJ,EAAP;AACH;AACJ,GALL,EAMKH,IANL,CAMUG,IAAI,IAAG;AACTd,IAAAA,GAAG,CAACqB,QAAJ,CAAa;AAACC,MAAAA,mBAAmB,EAAGR,IAAI,CAACS;AAA5B,KAAb;AACAvB,IAAAA,GAAG,CAACqB,QAAJ,CAAa;AAACG,MAAAA,oBAAoB,EAAGV,IAAI,CAACW;AAA7B,KAAb;AACAzB,IAAAA,GAAG,CAACqB,QAAJ,CAAa;AAACK,MAAAA,sBAAsB,EAAGZ,IAAI,CAACa;AAA/B,KAAb;AACA3B,IAAAA,GAAG,CAACqB,QAAJ,CAAa;AAACO,MAAAA,uBAAuB,EAAGd,IAAI,CAACe;AAAhC,KAAb;AACH,GAXL,EAYKb,KAZL,CAYWC,KAAK,IAAI;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,GAdL;AAeH,CA3BM;AA6BP,OAAO,MAAMa,sBAAsB,GAAI,CAAC9B,GAAD,EAAKC,QAAL,KAAkB;AACrD,QAAMC,OAAO,GAAG,IAAIC,OAAJ,CAAa,GAAEN,QAAS,yBAAxB,EAAkD;AAC9DO,IAAAA,MAAM,EAAE,QADsD;AAE9DC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjB,kBAAYN;AADK,KAAf,CAFwD;AAK9DO,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,mCADH;AAEL,sBAAgB;AAFX;AALqD,GAAlD,CAAhB;AAWAC,EAAAA,KAAK,CAACR,OAAD,CAAL,CACKS,IADL,CACUC,GAAG,IAAI;AACT,QAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACpB,aAAOD,GAAG,CAACE,IAAJ,EAAP;AACH;AACJ,GALL,EAMKH,IANL,CAMUG,IAAI,IAAG;AACTd,IAAAA,GAAG,CAACqB,QAAJ,CAAa;AAACC,MAAAA,mBAAmB,EAAGR,IAAI,CAACS;AAA5B,KAAb;AACAvB,IAAAA,GAAG,CAACqB,QAAJ,CAAa;AAACG,MAAAA,oBAAoB,EAAGV,IAAI,CAACW;AAA7B,KAAb;AACAzB,IAAAA,GAAG,CAACqB,QAAJ,CAAa;AAACK,MAAAA,sBAAsB,EAAGZ,IAAI,CAACa;AAA/B,KAAb;AACA3B,IAAAA,GAAG,CAACqB,QAAJ,CAAa;AAACO,MAAAA,uBAAuB,EAAGd,IAAI,CAACe;AAAhC,KAAb;AACH,GAXL,EAYKb,KAZL,CAYWC,KAAK,IAAI;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,GAdL;AAeH,CA3BM;AA6BP,OAAO,MAAMc,uBAAuB,GAAI,CAAC/B,GAAD,EAAKC,QAAL,KAAkB;AACtD,QAAMC,OAAO,GAAG,IAAIC,OAAJ,CAAa,GAAEN,QAAS,0BAAxB,EAAmD;AAC/DO,IAAAA,MAAM,EAAE,QADuD;AAE/DC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjB,kBAAYN;AADK,KAAf,CAFyD;AAK/DO,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,mCADH;AAEL,sBAAgB;AAFX;AALsD,GAAnD,CAAhB;AAWAC,EAAAA,KAAK,CAACR,OAAD,CAAL,CACKS,IADL,CACUC,GAAG,IAAI;AACT,QAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACpB,aAAOD,GAAG,CAACE,IAAJ,EAAP;AACH;AACJ,GALL,EAMKH,IANL,CAMUG,IAAI,IAAG;AACTd,IAAAA,GAAG,CAACqB,QAAJ,CAAa;AAACC,MAAAA,mBAAmB,EAAGR,IAAI,CAACS;AAA5B,KAAb;AACAvB,IAAAA,GAAG,CAACqB,QAAJ,CAAa;AAACG,MAAAA,oBAAoB,EAAGV,IAAI,CAACW;AAA7B,KAAb;AACAzB,IAAAA,GAAG,CAACqB,QAAJ,CAAa;AAACK,MAAAA,sBAAsB,EAAGZ,IAAI,CAACa;AAA/B,KAAb;AACA3B,IAAAA,GAAG,CAACqB,QAAJ,CAAa;AAACO,MAAAA,uBAAuB,EAAGd,IAAI,CAACe;AAAhC,KAAb;AACH,GAXL,EAYKb,KAZL,CAYWC,KAAK,IAAI;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,GAdL;AAeH,CA3BM;AA6BP,OAAO,MAAMe,eAAe,GAAIhC,GAAD,IAAO;AAClC,QAAMiC,GAAG,GAAI,GAAEpC,QAAS,eAAxB;AACAa,EAAAA,KAAK,CAACuB,GAAD,CAAL,CACKtB,IADL,CACUC,GAAG,IAAI;AACT,QAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACpB,aAAOD,GAAG,CAACE,IAAJ,EAAP;AACH;AACJ,GALL,EAMKH,IANL,CAMUG,IAAI,IAAG;AACTd,IAAAA,GAAG,CAACqB,QAAJ,CAAa;AAACC,MAAAA,mBAAmB,EAAGR,IAAI,CAACS;AAA5B,KAAb;AACAvB,IAAAA,GAAG,CAACqB,QAAJ,CAAa;AAACG,MAAAA,oBAAoB,EAAGV,IAAI,CAACW;AAA7B,KAAb;AACAzB,IAAAA,GAAG,CAACqB,QAAJ,CAAa;AAACK,MAAAA,sBAAsB,EAAGZ,IAAI,CAACa;AAA/B,KAAb;AACA3B,IAAAA,GAAG,CAACqB,QAAJ,CAAa;AAACO,MAAAA,uBAAuB,EAAGd,IAAI,CAACe;AAAhC,KAAb;AACH,GAXL,EAYKb,KAZL,CAYWC,KAAK,IAAI;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,GAdL;AAgBH,CAlBM,C,CAqBP;AAGA;AAEA","sourcesContent":["import ENV from './../config.js'\nconst API_HOST = ENV.api_host\n\n//send a friend request\nexport const send_friend_request = (app, username) => {\n    const request = new Request(`${API_HOST}/add_potential_friend`, {\n        method: \"post\",\n        body: JSON.stringify({\n            \"username\": username,\n        }),\n        headers: {\n            Accept: \"application/json, text/plain, */*\",\n            \"Content-Type\": \"application/json\"\n        }\n    });\n    return fetch(request)\n        .then(res => {\n            if (res.status === 404) {\n                return res.json();\n            }\n            if (res.status === 200) {\n                return res.json();\n            }\n        })\n        .then(json => {\n            if (json){\n                return json.message\n            }\n        })\n        .catch(error => {\n            console.log(error);\n        });\n\n\n}\n\nexport const add_existing_friend =  (app,username) => {\n    const request = new Request(`${API_HOST}/add_existing_friend`, {\n        method: \"post\",\n        body: JSON.stringify({\n            \"username\": username,\n        }),\n        headers: {\n            Accept: \"application/json, text/plain, */*\",\n            \"Content-Type\": \"application/json\"\n        }\n    });\n\n    fetch(request)\n        .then(res => {\n            if (res.status === 200) {\n                return res.json()\n            }\n        })\n        .then(json =>{\n            app.setState({ExistingFriendsList : json.existing_friends})\n            app.setState({PotentialFriendsList : json.potential_friends})\n            app.setState({ExistingFriendsList_id : json.existing_friends_id})\n            app.setState({PotentialFriendsList_id : json.potential_friends_id})\n        })\n        .catch(error => {\n            console.log(error);\n        });\n}\n\nexport const delete_existing_friend =  (app,username) => {\n    const request = new Request(`${API_HOST}/delete_existing_friend`, {\n        method: \"delete\",\n        body: JSON.stringify({\n            \"username\": username,\n        }),\n        headers: {\n            Accept: \"application/json, text/plain, */*\",\n            \"Content-Type\": \"application/json\"\n        }\n    });\n\n    fetch(request)\n        .then(res => {\n            if (res.status === 200) {\n                return res.json()\n            }\n        })\n        .then(json =>{\n            app.setState({ExistingFriendsList : json.existing_friends})\n            app.setState({PotentialFriendsList : json.potential_friends})\n            app.setState({ExistingFriendsList_id : json.existing_friends_id})\n            app.setState({PotentialFriendsList_id : json.potential_friends_id})\n        })\n        .catch(error => {\n            console.log(error);\n        });\n}\n\nexport const delete_potential_friend =  (app,username) => {\n    const request = new Request(`${API_HOST}/delete_potential_friend`, {\n        method: \"delete\",\n        body: JSON.stringify({\n            \"username\": username,\n        }),\n        headers: {\n            Accept: \"application/json, text/plain, */*\",\n            \"Content-Type\": \"application/json\"\n        }\n    });\n\n    fetch(request)\n        .then(res => {\n            if (res.status === 200) {\n                return res.json()\n            }\n        })\n        .then(json =>{\n            app.setState({ExistingFriendsList : json.existing_friends})\n            app.setState({PotentialFriendsList : json.potential_friends})\n            app.setState({ExistingFriendsList_id : json.existing_friends_id})\n            app.setState({PotentialFriendsList_id : json.potential_friends_id})\n        })\n        .catch(error => {\n            console.log(error);\n        });\n}\n\nexport const get_friend_list = (app)=>{\n    const url = `${API_HOST}/get_a_friend`\n    fetch(url)\n        .then(res => {\n            if (res.status === 200) {\n                return res.json()\n            }\n        })\n        .then(json =>{\n            app.setState({ExistingFriendsList : json.existing_friends})\n            app.setState({PotentialFriendsList : json.potential_friends})\n            app.setState({ExistingFriendsList_id : json.existing_friends_id})\n            app.setState({PotentialFriendsList_id : json.potential_friends_id})\n        })\n        .catch(error => {\n            console.log(error);\n        });\n\n}\n\n\n//delete existing friend\n\n\n//accept potential friend\n\n//reject potential friend\n\n\n\n"]},"metadata":{},"sourceType":"module"}