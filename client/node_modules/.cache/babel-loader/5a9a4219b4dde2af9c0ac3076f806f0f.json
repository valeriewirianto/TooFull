{"ast":null,"code":"// environment configutations\nimport ENV from'./../config.js';var API_HOST=ENV.api_host;console.log(API_HOST);export var signupFetch=function signupFetch(signupInfo){// Create our request constructor with all the parameters we need\nvar request=new Request(\"http://localhost:5000/users/signup\",{method:\"post\",body:JSON.stringify(signupInfo.state),headers:{Accept:\"application/json, text/plain, */*\",\"Content-Type\":\"application/json\"}});// Send the request with fetch()\nfetch(request).then(function(res){if(res.status===200){return res.json();}}).catch(function(error){console.log(error);});};","map":{"version":3,"sources":["/Users/valeriewirianto/University Stuff/309/Group/team50/client/src/actions/auth.js"],"names":["ENV","API_HOST","api_host","console","log","signupFetch","signupInfo","request","Request","method","body","JSON","stringify","state","headers","Accept","fetch","then","res","status","json","catch","error"],"mappings":"AAAA;AACA,MAAOA,CAAAA,GAAP,KAAgB,gBAAhB,CACA,GAAMC,CAAAA,QAAQ,CAAGD,GAAG,CAACE,QAArB,CACAC,OAAO,CAACC,GAAR,CAAYH,QAAZ,EAEA,MAAO,IAAMI,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,UAAD,CAAgB,CACvC;AACA,GAAMC,CAAAA,OAAO,CAAG,GAAIC,CAAAA,OAAJ,sCAAkD,CAC9DC,MAAM,CAAE,MADsD,CAE9DC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeN,UAAU,CAACO,KAA1B,CAFwD,CAG9DC,OAAO,CAAE,CACLC,MAAM,CAAE,mCADH,CAEL,eAAgB,kBAFX,CAHqD,CAAlD,CAAhB,CAUA;AACAC,KAAK,CAACT,OAAD,CAAL,CACKU,IADL,CACU,SAAAC,GAAG,CAAI,CACT,GAAIA,GAAG,CAACC,MAAJ,GAAe,GAAnB,CAAwB,CACpB,MAAOD,CAAAA,GAAG,CAACE,IAAJ,EAAP,CACH,CACJ,CALL,EAMKC,KANL,CAMW,SAAAC,KAAK,CAAI,CACZnB,OAAO,CAACC,GAAR,CAAYkB,KAAZ,EACH,CARL,EASH,CAtBM","sourcesContent":["// environment configutations\nimport ENV from './../config.js'\nconst API_HOST = ENV.api_host\nconsole.log(API_HOST)\n\nexport const signupFetch = (signupInfo) => {\n    // Create our request constructor with all the parameters we need\n    const request = new Request(`http://localhost:5000/users/signup`, {\n        method: \"post\",\n        body: JSON.stringify(signupInfo.state),\n        headers: {\n            Accept: \"application/json, text/plain, */*\",\n            \"Content-Type\": \"application/json\"\n        }\n    });\n\n\n    // Send the request with fetch()\n    fetch(request)\n        .then(res => {\n            if (res.status === 200) {\n                return res.json();\n            }\n        })\n        .catch(error => {\n            console.log(error);\n        });\n};\n"]},"metadata":{},"sourceType":"module"}