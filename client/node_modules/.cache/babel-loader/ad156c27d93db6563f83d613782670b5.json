{"ast":null,"code":"// environment configutations\nimport ENV from './../config.js';\nconst API_HOST = ENV.api_host; // console.log('Current environment:', ENV.env)\n// Send a request to check if a user is logged in through the session cookie\n\nexport const checkSession = app => {\n  const url = `${API_HOST}/users/check-session`;\n\n  if (!ENV.use_frontend_test_user) {\n    fetch(url).then(res => {\n      if (res.status === 200) {\n        return res.json();\n      }\n    }).then(json => {\n      if (json && json.currentUser) {\n        app.setState({\n          currentUser: json.currentUser\n        });\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  } else {\n    app.setState({\n      currentUser: ENV.user\n    });\n  }\n}; // A function to send a POST request with the user to be logged in\n\nexport const login = (loginComp, app) => {\n  const request = new Request(`${API_HOST}/users/login`, {\n    method: \"post\",\n    body: JSON.stringify(loginComp.state),\n    headers: {\n      Accept: \"application/json, text/plain, */*\",\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  fetch(request).then(res => {\n    if (res.status === 200) {\n      return res.json();\n    }\n  }).then(json => {\n    if (json.currentUser !== undefined) {\n      app.setState({\n        currentUser: json.currentUser\n      });\n      loginComp.setState({\n        loggedIn: 1\n      });\n    }\n  }).catch(error => {\n    console.log(error);\n  });\n};","map":{"version":3,"sources":["/Users/valeriewirianto/University Stuff/309/Group/team50/client/src/actions/session.js"],"names":["ENV","API_HOST","api_host","checkSession","app","url","use_frontend_test_user","fetch","then","res","status","json","currentUser","setState","catch","error","console","log","user","login","loginComp","request","Request","method","body","JSON","stringify","state","headers","Accept","undefined","loggedIn"],"mappings":"AAAA;AACA,OAAOA,GAAP,MAAgB,gBAAhB;AACA,MAAMC,QAAQ,GAAGD,GAAG,CAACE,QAArB,C,CACA;AAEA;;AACA,OAAO,MAAMC,YAAY,GAAIC,GAAD,IAAS;AACjC,QAAMC,GAAG,GAAI,GAAEJ,QAAS,sBAAxB;;AAEA,MAAI,CAACD,GAAG,CAACM,sBAAT,EAAiC;AAC7BC,IAAAA,KAAK,CAACF,GAAD,CAAL,CACCG,IADD,CACMC,GAAG,IAAI;AACT,UAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACpB,eAAOD,GAAG,CAACE,IAAJ,EAAP;AACH;AACJ,KALD,EAMCH,IAND,CAMMG,IAAI,IAAI;AACV,UAAIA,IAAI,IAAIA,IAAI,CAACC,WAAjB,EAA8B;AAC1BR,QAAAA,GAAG,CAACS,QAAJ,CAAa;AAAED,UAAAA,WAAW,EAAED,IAAI,CAACC;AAApB,SAAb;AACH;AACJ,KAVD,EAWCE,KAXD,CAWOC,KAAK,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KAbD;AAcH,GAfD,MAeO;AACHX,IAAAA,GAAG,CAACS,QAAJ,CAAa;AAAED,MAAAA,WAAW,EAAEZ,GAAG,CAACkB;AAAnB,KAAb;AACH;AAEJ,CAtBM,C,CAwBP;;AACA,OAAO,MAAMC,KAAK,GAAG,CAACC,SAAD,EAAYhB,GAAZ,KAAoB;AACrC,QAAMiB,OAAO,GAAG,IAAIC,OAAJ,CAAa,GAAErB,QAAS,cAAxB,EAAuC;AACnDsB,IAAAA,MAAM,EAAE,MAD2C;AAEnDC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,SAAS,CAACO,KAAzB,CAF6C;AAGnDC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,mCADH;AAEL,sBAAgB;AAFX;AAH0C,GAAvC,CAAhB;AASAtB,EAAAA,KAAK,CAACc,OAAD,CAAL,CACKb,IADL,CACUC,GAAG,IAAI;AACT,QAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACpB,aAAOD,GAAG,CAACE,IAAJ,EAAP;AACH;AACJ,GALL,EAMKH,IANL,CAMUG,IAAI,IAAI;AACV,QAAIA,IAAI,CAACC,WAAL,KAAqBkB,SAAzB,EAAoC;AAChC1B,MAAAA,GAAG,CAACS,QAAJ,CAAa;AAAED,QAAAA,WAAW,EAAED,IAAI,CAACC;AAApB,OAAb;AACAQ,MAAAA,SAAS,CAACP,QAAV,CAAmB;AAAEkB,QAAAA,QAAQ,EAAE;AAAZ,OAAnB;AACH;AACJ,GAXL,EAYKjB,KAZL,CAYWC,KAAK,IAAI;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,GAdL;AAeH,CAzBM","sourcesContent":["// environment configutations\nimport ENV from './../config.js'\nconst API_HOST = ENV.api_host\n// console.log('Current environment:', ENV.env)\n\n// Send a request to check if a user is logged in through the session cookie\nexport const checkSession = (app) => {\n    const url = `${API_HOST}/users/check-session`;\n\n    if (!ENV.use_frontend_test_user) {\n        fetch(url)\n        .then(res => {\n            if (res.status === 200) {\n                return res.json();\n            }\n        })\n        .then(json => {\n            if (json && json.currentUser) {\n                app.setState({ currentUser: json.currentUser });\n            }\n        })\n        .catch(error => {\n            console.log(error);\n        });\n    } else {\n        app.setState({ currentUser: ENV.user });\n    }\n    \n};\n\n// A function to send a POST request with the user to be logged in\nexport const login = (loginComp, app) => {\n    const request = new Request(`${API_HOST}/users/login`, {\n        method: \"post\",\n        body: JSON.stringify(loginComp.state),\n        headers: {\n            Accept: \"application/json, text/plain, */*\",\n            \"Content-Type\": \"application/json\"\n        }\n    });\n\n    fetch(request)\n        .then(res => {\n            if (res.status === 200) {\n                return res.json();\n            }\n        })\n        .then(json => {\n            if (json.currentUser !== undefined) {\n                app.setState({ currentUser: json.currentUser });\n                loginComp.setState({ loggedIn: 1 })\n            }\n        })\n        .catch(error => {\n            console.log(error);\n        });\n};"]},"metadata":{},"sourceType":"module"}