{"ast":null,"code":"var _jsxFileName = \"/Users/valeriewirianto/University Stuff/309/Group/team50/food/src/IndividualList.js\";\nimport \"./IndividualFriendsUserSetting.css\";\nimport { uid } from 'react-uid'; // import {Link} from \"react-router-dom\";\n\nimport watermelon from './Stickers/watermelon.png';\nimport donut from './Stickers/donut.png';\nimport pie from './Stickers/pie.png';\nimport broccoli from './Stickers/brocoli.png';\nimport React from \"react\";\nimport ReactHtmlParser from 'react-html-parser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass IndividualList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ListName: \"Home Grown Ingredients\",\n      Category: \"Ingredients\",\n      ListDescription: \"My favourite ingredients that I grow in my garden\",\n      FoodRank: [{\n        Rank: 1,\n        FoodName: \"Spinach\",\n        Notes: \"\"\n      }, {\n        Rank: 2,\n        FoodName: \"Tomato\",\n        Notes: \"Sour\"\n      }, {\n        Rank: 3,\n        FoodName: \"Potato\",\n        Notes: \"used for fries\"\n      }],\n      seen: false,\n      seen2: false,\n      seen3: false,\n      info: {},\n      stickers: [{\n        id: 0,\n        source: watermelon\n      }, {\n        id: 1,\n        source: donut\n      }, {\n        id: 2,\n        source: pie\n      }, {\n        id: 3,\n        source: broccoli\n      }],\n      freeStickers: [],\n      selectedImage: null\n    };\n\n    this.removeFoodRank = Info => {\n      let filterFoodRank = this.state.FoodRank.filter(check => {\n        return check !== Info;\n      });\n      filterFoodRank.map((R, index) => R.Rank = index + 1);\n      this.setState({\n        FoodRank: filterFoodRank\n      });\n    };\n\n    this.deleteWholeList = () => {\n      this.setState({\n        FoodRank: []\n      });\n    };\n\n    this.OpenClose = () => {\n      this.setState({\n        seen: !this.state.seen\n      });\n    };\n\n    this.OpenClose2 = () => {\n      this.setState({\n        seen2: !this.state.seen2\n      });\n    };\n\n    this.OpenClose3 = () => {\n      this.setState({\n        seen3: !this.state.seen3\n      });\n    };\n\n    this.editItem = PopUpState => {\n      const foodName = PopUpState.FoodName;\n      const notes = PopUpState.Notes;\n      const rank = PopUpState.Rank;\n      let filterFoodRank = this.state.FoodRank.filter(check => {\n        return check.Rank !== rank;\n      });\n      const editedItem = {\n        Rank: rank,\n        FoodName: foodName,\n        Notes: notes\n      };\n      filterFoodRank.splice(rank - 1, 0, editedItem);\n      filterFoodRank.map((R, index) => R.Rank = index + 1);\n      this.setState({\n        FoodRank: filterFoodRank\n      });\n      this.OpenClose2();\n    };\n\n    this.addNewItem = PopUpState => {\n      const foodName = PopUpState.FoodName;\n      let rank = PopUpState.Rank;\n\n      if (rank < 1) {\n        rank = 1;\n      } else if (rank > this.state.FoodRank.length + 1) {\n        rank = this.state.FoodRank.length;\n      }\n\n      const note = PopUpState.Note;\n      const newItem = {\n        Rank: rank,\n        FoodName: foodName,\n        Notes: note\n      };\n      const old = this.state.FoodRank;\n      old.splice(rank - 1, 0, newItem);\n      old.map((R, index) => R.Rank = index + 1);\n      this.setState({\n        FoodRank: old\n      });\n      this.OpenClose();\n    };\n\n    this.editDescription = description => {\n      this.setState({\n        ListDescription: description\n      });\n      this.OpenClose3();\n    };\n\n    this.changeEditingRank = Info => {\n      this.setState({\n        info: Info\n      });\n      this.OpenClose2();\n    };\n\n    this.click = event => {\n      const target = event.target;\n      const type = target.type;\n      const className = target.className;\n\n      if (className === 'freeSticker') {\n        const targetID = target.id;\n        this.deleteFreeSticker(targetID);\n      }\n\n      if (type !== 'button' && this.state.selectedImage != null && className !== 'sticker') {\n        let x = event.clientX;\n        let y = event.clientY;\n        const length = this.state.freeStickers.length;\n        let ID = 0;\n\n        if (length !== 0) {\n          ID = this.state.freeStickers[length - 1].id + 1;\n        }\n\n        const freeSticker = {\n          id: ID,\n          location: [x, y],\n          source: this.state.selectedImage\n        };\n        let existingFreeStickers = this.state.freeStickers;\n        existingFreeStickers.push(freeSticker);\n        this.setState({\n          freeStickers: existingFreeStickers,\n          selectedImage: null\n        });\n      }\n    };\n\n    this.selectImage = event => {\n      event.preventDefault();\n      console.log(\"I am selecting a sticker\");\n      const target = event.target;\n      const source = target.src;\n      console.log(source);\n      this.setState({\n        selectedImage: source\n      });\n    };\n  }\n\n  ListDescription() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"ListDescription\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"List Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.state.ListDescription\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this);\n  }\n\n  Header() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"HeaderIndividualList\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: this.state.ListName + \"(\" + this.state.Category + \")\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"AddNewItem\",\n        onClick: this.OpenClose,\n        children: \" Add a new list item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this), this.state.seen ? /*#__PURE__*/_jsxDEV(NewRankPopup, {\n        addNewItem: this.addNewItem,\n        OpenClose: this.OpenClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 36\n      }, this) : null, this.state.seen2 ? /*#__PURE__*/_jsxDEV(EditRankPopup, {\n        OpenClose: this.OpenClose2,\n        Info: this.state.info,\n        editItem: this.editItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 37\n      }, this) : null, this.state.seen3 ? /*#__PURE__*/_jsxDEV(EditDescription, {\n        editDescription: this.editDescription,\n        OpenClose: this.OpenClose3,\n        Description: this.state.ListDescription\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 37\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"EmptySpace\",\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"DeleteWholeList\",\n        onClick: this.deleteWholeList,\n        children: \" Delete the whole list \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"EmptySpace\",\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"EditDescription\",\n        onClick: this.OpenClose3,\n        children: \" Edit Description \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this);\n  }\n\n  TableRow(info) {\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: info.Rank\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: info.FoodName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: info.Notes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"editIndividualList\",\n          onClick: () => this.changeEditingRank(info),\n          children: \" edit \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"deleteIndividualList\",\n          onClick: () => this.removeFoodRank(info),\n          children: \" delete \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }, this)]\n    }, uid(info), true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }, this);\n  }\n\n  Table() {\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Rank\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"FoodName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Notes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 17\n        }, this), this.state.FoodRank.map(info => {\n          return this.TableRow(info);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }, this);\n  }\n\n  deleteFreeSticker(id) {\n    console.log(\"Deleteing\");\n    const freeStickers = this.state.freeStickers;\n    let filtered = freeStickers.filter(fs => fs.id.toString() !== id);\n    console.log(filtered);\n    this.setState({\n      freeStickers: filtered\n    });\n  }\n\n  freeSticker(fs) {\n    const id = fs.id;\n    const stringID = id.toString();\n    const source = fs.source;\n    const x = fs.location[0];\n    const y = fs.location[1];\n    let left = x - 25 + 'px';\n    let top = y - 25 + 'px';\n    let sticker = document.createElement(\"IMG\");\n    sticker.src = source;\n    sticker.alt = \"iamge not found\";\n    sticker.key = uid(fs);\n    sticker.id = stringID;\n    sticker.className = 'freeSticker';\n    sticker.style.left = left;\n    sticker.style.top = top;\n    sticker.style.position = \"absolute\";\n    return ReactHtmlParser(sticker.outerHTML);\n  }\n\n  FreeStickers() {\n    const freeStickers = this.state.freeStickers;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: freeStickers.map(fs => this.freeSticker(fs))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 17\n    }, this);\n  }\n\n  sticker(s) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stickerDiv\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: this.state.stickers[s.id].source,\n        alt: \"No image\",\n        className: \"sticker\",\n        onClick: this.selectImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"EmptySpace\",\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 17\n      }, this)]\n    }, uid(s), true, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 13\n    }, this);\n  }\n\n  StickerList() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stickerList\",\n      children: this.state.stickers.map(s => this.sticker(s))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 13\n    }, this);\n  }\n\n  StickerPanel() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"StickerPanel\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \" Choose Your Stickers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" Choose by clicking the image and the position that the sticker should go and deleting by clicking again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 17\n      }, this), this.StickerList(), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Stickers can only go to the header, List Description, item table and sticker panel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 13\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: this.click,\n      children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 17\n      }, this), this.Header(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 17\n      }, this), this.Table(), this.ListDescription(), this.StickerPanel(), this.FreeStickers()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass NewRankPopup extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      FoodName: \"\",\n      Rank: \"\",\n      Note: \"\"\n    };\n\n    this.handleChange = event => {\n      const target = event.target;\n      const value = target.value;\n      const name = target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n  }\n\n  FoodNameForm() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"FoodNameForm\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Food Name:  \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"FoodName\",\n          value: this.state.FoodName,\n          onChange: this.handleChange,\n          className: \"FoodNameInputBox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 13\n    }, this);\n  }\n\n  RankForm() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"RankForm\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Rank:                      \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"Rank\",\n          value: this.state.Rank,\n          className: \"RankInputBox\",\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 13\n    }, this);\n  }\n\n  NoteForm() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"NoteForm\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Note:  \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"Note\",\n          value: this.state.Note,\n          className: \"NoteInputBox\",\n          onChange: this.handleChange,\n          rows: \"5\",\n          cols: \"10\",\n          wrap: \"soft\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 13\n    }, this);\n  }\n\n  Header() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"PopUpWindowHeader\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add a new Item to the list\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 13\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"PopUpWindow\",\n      children: [this.Header(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 17\n      }, this), this.FoodNameForm(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 17\n      }, this), this.RankForm(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 17\n      }, this), this.NoteForm(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ButtonArray\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => this.props.addNewItem(this.state),\n          children: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"EmptySpace\",\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: this.props.OpenClose,\n          children: \" Cancel \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass EditRankPopup extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      FoodName: this.props.Info.FoodName,\n      Notes: this.props.Info.Notes,\n      Rank: this.props.Info.Rank\n    };\n\n    this.handleChange = event => {\n      const target = event.target;\n      const value = target.value;\n      const name = target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n  }\n\n  Header() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"PopUpWindowHeader\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Edit this item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 13\n    }, this);\n  }\n\n  NoteForm() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"NoteForm\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Note:  \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"Notes\",\n          value: this.state.Notes,\n          className: \"NoteInputBox\",\n          onChange: this.handleChange,\n          rows: \"5\",\n          cols: \"10\",\n          wrap: \"soft\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 13\n    }, this);\n  }\n\n  FoodNameForm() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"FoodNameForm\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Food Name:  \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"FoodName\",\n          value: this.state.FoodName,\n          onChange: this.handleChange,\n          className: \"FoodNameInputBox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 13\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"PopUpWindow\",\n      children: [this.Header(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 17\n      }, this), this.FoodNameForm(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 17\n      }, this), this.NoteForm(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ButtonArray\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => this.props.editItem(this.state),\n          children: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"EmptySpace\",\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: this.props.OpenClose,\n          children: \" Cancel \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass EditDescription extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      Description: this.props.Description\n    };\n\n    this.handleChange = event => {\n      const target = event.target;\n      const value = target.value;\n      const name = target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n  }\n\n  Header() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"PopUpWindowHeader\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Edit List Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 554,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 553,\n      columnNumber: 13\n    }, this);\n  }\n\n  DescriptionForm() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"DescriptionForm\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"New description:  \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"Description\",\n          value: this.state.Description,\n          onChange: this.handleChange,\n          className: \"DescriptionInputBox\",\n          rows: \"5\",\n          cols: \"10\",\n          wrap: \"soft\",\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 562,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 561,\n      columnNumber: 13\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"PopUpWindow\",\n      children: [this.Header(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 577,\n        columnNumber: 17\n      }, this), this.DescriptionForm(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ButtonArray\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => this.props.editDescription(this.state.Description),\n          children: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 581,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"EmptySpace\",\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: this.props.OpenClose,\n          children: \" Cancel \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 583,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 580,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 575,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default IndividualList;","map":{"version":3,"sources":["/Users/valeriewirianto/University Stuff/309/Group/team50/food/src/IndividualList.js"],"names":["uid","watermelon","donut","pie","broccoli","React","ReactHtmlParser","IndividualList","Component","state","ListName","Category","ListDescription","FoodRank","Rank","FoodName","Notes","seen","seen2","seen3","info","stickers","id","source","freeStickers","selectedImage","removeFoodRank","Info","filterFoodRank","filter","check","map","R","index","setState","deleteWholeList","OpenClose","OpenClose2","OpenClose3","editItem","PopUpState","foodName","notes","rank","editedItem","splice","addNewItem","length","note","Note","newItem","old","editDescription","description","changeEditingRank","click","event","target","type","className","targetID","deleteFreeSticker","x","clientX","y","clientY","ID","freeSticker","location","existingFreeStickers","push","selectImage","preventDefault","console","log","src","Header","TableRow","Table","filtered","fs","toString","stringID","left","top","sticker","document","createElement","alt","key","style","position","outerHTML","FreeStickers","s","StickerList","StickerPanel","render","NewRankPopup","handleChange","value","name","FoodNameForm","RankForm","NoteForm","props","EditRankPopup","EditDescription","Description","DescriptionForm"],"mappings":"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","sourcesContent":["import \"./IndividualFriendsUserSetting.css\";\nimport {uid} from 'react-uid';\n// import {Link} from \"react-router-dom\";\nimport watermelon from './Stickers/watermelon.png'\nimport donut from './Stickers/donut.png'\nimport pie from './Stickers/pie.png'\nimport broccoli from './Stickers/brocoli.png'\nimport React from \"react\";\nimport ReactHtmlParser from 'react-html-parser';\nclass IndividualList extends React.Component{\n    state = {\n        ListName: \"Home Grown Ingredients\",\n        Category: \"Ingredients\",\n        ListDescription: \"My favourite ingredients that I grow in my garden\",\n        FoodRank: [{Rank: 1, FoodName: \"Spinach\", Notes: \"\"},\n                    {Rank: 2, FoodName: \"Tomato\", Notes: \"Sour\"},\n                    {Rank: 3, FoodName: \"Potato\", Notes: \"used for fries\"}],\n        seen: false,\n        seen2: false,\n        seen3: false,\n        info: {},\n        stickers: [{id:0, source: watermelon}, {id: 1, source: donut}, {id:2, source: pie}, {id: 3, source: broccoli}],\n        freeStickers: [],\n        selectedImage : null\n    }\n    ListDescription(){\n        return(\n            <div id='ListDescription'>\n                <h2>List Description</h2>\n                <p>{this.state.ListDescription}</p>\n            </div>\n        )\n    }\n\n    removeFoodRank = (Info) => {\n        let filterFoodRank = this.state.FoodRank.filter(\n            (check) =>{\n                return check !== Info\n            }\n        )\n\n        filterFoodRank.map((R, index)=> R.Rank = index + 1)\n\n        this.setState(\n            {\n                FoodRank: filterFoodRank\n            }\n        )\n    }\n\n    deleteWholeList = ()=>{\n        this.setState({\n            FoodRank: []\n        })\n    }\n\n    OpenClose =()=>{\n        this.setState({\n            seen: !this.state.seen\n        })\n    }\n\n    OpenClose2 =()=>{\n        this.setState({\n            seen2: !this.state.seen2\n        })\n    }\n\n    OpenClose3 =()=>{\n        this.setState({\n            seen3: !this.state.seen3\n        })\n    }\n\n    editItem = (PopUpState)=>{\n        const foodName = PopUpState.FoodName\n        const notes = PopUpState.Notes\n        const rank = PopUpState.Rank\n\n        let filterFoodRank = this.state.FoodRank.filter(\n            (check) =>{\n                return check.Rank !== rank\n            }\n        )\n\n        const editedItem = {\n            Rank: rank,\n            FoodName: foodName,\n            Notes: notes\n        }\n\n        filterFoodRank.splice(rank - 1,0, editedItem)\n        filterFoodRank.map((R, index)=> R.Rank = index + 1)\n        this.setState(\n            {\n                FoodRank: filterFoodRank\n            }\n        )\n\n        this.OpenClose2()\n\n\n    }\n\n    addNewItem = (PopUpState)=>{\n        const foodName = PopUpState.FoodName\n        let rank = PopUpState.Rank\n        if (rank < 1){\n            rank = 1\n        }else if(rank > this.state.FoodRank.length + 1){\n            rank = this.state.FoodRank.length\n        }\n\n        const note = PopUpState.Note\n        const newItem = {\n            Rank: rank,\n            FoodName: foodName,\n            Notes: note\n        }\n        const old = this.state.FoodRank\n        old.splice(rank - 1,0, newItem)\n        old.map((R, index)=> R.Rank = index + 1)\n        this.setState(\n            {\n                FoodRank: old\n            }\n        )\n        this.OpenClose()\n    }\n\n    editDescription = (description) => {\n        this.setState(\n            {\n                ListDescription: description\n            }\n        )\n        this.OpenClose3()\n    }\n\n    Header(){\n        return(\n            <div id='HeaderIndividualList'>\n                <h1>{this.state.ListName + \"(\" + this.state.Category + \")\"}</h1>\n                <button type=\"button\" className='AddNewItem' onClick={this.OpenClose}> Add a new list item</button>\n                {this.state.seen ? <NewRankPopup addNewItem={this.addNewItem} OpenClose={this.OpenClose} /> : null}\n                {this.state.seen2 ? <EditRankPopup OpenClose={this.OpenClose2} Info= {this.state.info}\n                                                   editItem={this.editItem}\n                /> : null}\n                {this.state.seen3 ? <EditDescription editDescription={this.editDescription} OpenClose={this.OpenClose3}\n                                                     Description = {this.state.ListDescription}\n                /> : null}\n                <span className='EmptySpace'> </span>\n                <button type=\"button\" className='DeleteWholeList' onClick={this.deleteWholeList}> Delete the whole list </button>\n                <span className='EmptySpace'> </span>\n\n                <button type=\"button\" className='EditDescription' onClick={this.OpenClose3}> Edit Description </button>\n\n            </div>\n        )\n    }\n\n\n    changeEditingRank = (Info)=> {\n        this.setState(\n            {\n                info: Info\n            }\n        )\n        this.OpenClose2()\n    }\n\n    TableRow(info){\n        return(\n            <tr key={uid(info)}>\n                <td>\n                    <strong>{info.Rank}</strong>\n                </td>\n                <td>\n                    <strong>{info.FoodName}</strong>\n                </td>\n                <td>\n                    <strong>{info.Notes}</strong>\n                </td>\n                <td>\n                    <button type=\"button\" className='editIndividualList'\n                            onClick={() => this.changeEditingRank(info)}\n                    > edit </button>\n                </td>\n                <td>\n                    <button type=\"button\" className='deleteIndividualList'\n                            onClick = {\n                                () => this.removeFoodRank(info)\n                            }\n                    > delete </button>\n                </td>\n            </tr>\n        )\n    }\n\n\n    Table(){\n        return(\n            <table>\n                <tbody>\n                <tr>\n                    <th>Rank</th>\n                    <th>FoodName</th>\n                    <th>Notes</th>\n                    <th>Edit</th>\n                    <th>Delete</th>\n                </tr>\n                {this.state.FoodRank.map(info => {return this.TableRow(info)})}\n                </tbody>\n            </table>\n        )\n    }\n\n\n\n\n    deleteFreeSticker(id){\n        console.log(\"Deleteing\")\n        const freeStickers = this.state.freeStickers\n        let filtered = freeStickers.filter(fs => fs.id.toString() !== id)\n        console.log(filtered)\n        this.setState({\n            freeStickers: filtered\n        })\n    }\n\n\n\n    click = (event)=>{\n        const target = event.target\n        const type = target.type\n        const className = target.className\n\n        if(className === 'freeSticker'){\n            const targetID = target.id\n            this.deleteFreeSticker(targetID)\n        }\n\n        if (type !== 'button' && this.state.selectedImage != null && className !== 'sticker'){\n            let x = event.clientX\n            let y = event.clientY\n            const length = this.state.freeStickers.length\n            let ID = 0\n            if (length !== 0){\n                ID = this.state.freeStickers[length - 1].id + 1\n            }\n            const freeSticker = {\n                id: ID,\n                location: [x, y],\n                source: this.state.selectedImage\n            }\n            let existingFreeStickers = this.state.freeStickers\n            existingFreeStickers.push(freeSticker)\n            this.setState({\n                freeStickers: existingFreeStickers,\n                selectedImage: null\n\n            })\n\n        }\n    }\n\n    freeSticker(fs) {\n        const id = fs.id\n        const stringID = id.toString()\n        const source = fs.source\n        const x = fs.location[0]\n        const y = fs.location[1]\n        let left = (x - 25)+ 'px';\n        let top = (y - 25) + 'px';\n        let sticker = document.createElement(\"IMG\");\n        sticker.src =source\n        sticker.alt = \"iamge not found\"\n        sticker.key = uid(fs)\n        sticker.id = stringID\n        sticker.className = 'freeSticker'\n        sticker.style.left = left\n        sticker.style.top = top\n        sticker.style.position = \"absolute\"\n\n        return (\n            ReactHtmlParser(sticker.outerHTML)\n        )\n\n    }\n\n    FreeStickers(){\n        const freeStickers = this.state.freeStickers\n        return(\n                <div>\n                    { freeStickers.map(fs => this.freeSticker(fs))}\n                </div>\n\n\n                )\n    }\n\n    selectImage= (event)=> {\n        event.preventDefault()\n        console.log(\"I am selecting a sticker\")\n        const target = event.target\n        const source = target.src\n        console.log(source)\n        this.setState({\n            selectedImage: source\n        })\n\n\n    }\n\n    sticker(s){\n\n        return(\n            <div className='stickerDiv' key={uid(s)}>\n                <img src={this.state.stickers[s.id].source } alt='No image'  className='sticker'\n                     onClick={this.selectImage}/>\n                <span className='EmptySpace'> </span>\n            </div>\n\n        )\n    }\n\n\n\n\n\n    StickerList(){\n        return(\n            <div className='stickerList'>\n                {this.state.stickers.map(s => this.sticker(s))}\n\n            </div>\n\n        )\n    }\n\n\n\n    StickerPanel(){\n        return(\n            <div className='StickerPanel'>\n                <h2> Choose Your Stickers</h2>\n                <p> Choose by clicking the image and the position that the sticker should go and deleting by clicking again</p>\n                {this.StickerList()}\n                <p>Stickers can only go to the header, List Description, item table and sticker panel</p>\n            </div>\n        )\n    }\n\n\n\n    render() {\n        return(\n            <div onClick={this.click}>\n                {/*<Link to={'/Main'}>*/}\n                {/*    <div><button className='back'>Back</button></div>*/}\n                {/*</Link>*/}\n                <hr/>\n                {this.Header()}\n                <br/>\n\n                {this.Table()}\n                {this.ListDescription()}\n                {this.StickerPanel()}\n                {this.FreeStickers()}\n\n            </div>\n        )\n    }\n}\n\nclass NewRankPopup extends React.Component{\n    state = {\n        FoodName: \"\",\n        Rank: \"\",\n        Note: \"\"\n    }\n\n    handleChange = (event) => {\n        const target = event.target\n        const value = target.value\n        const name = target.name\n\n        this.setState({\n            [name]: value\n        })\n    }\n\n    FoodNameForm(){\n        return(\n            <form className=\"FoodNameForm\">\n                <label>\n                    <strong>Food Name:  </strong>\n                    <input type=\"text\" name=\"FoodName\" value = {this.state.FoodName}\n                           onChange={this.handleChange} className=\"FoodNameInputBox\"\n                    />\n                </label>\n            </form>\n        )\n    }\n\n    RankForm(){\n        return(\n            <form className=\"RankForm\">\n                <label>\n                    <strong>{\"Rank:                      \"}</strong>\n                    <input type=\"text\" name=\"Rank\" value = {this.state.Rank} className=\"RankInputBox\"\n                           onChange={this.handleChange}\n                    />\n                </label>\n            </form>\n        )\n    }\n    NoteForm(){\n        return(\n            <form className=\"NoteForm\">\n                <label>\n                    <strong>Note:  </strong>\n                    <br/>\n                    <textarea  name=\"Note\" value = {this.state.Note} className=\"NoteInputBox\"\n                               onChange={this.handleChange} rows=\"5\" cols=\"10\" wrap=\"soft\">\n                    </textarea>\n                </label>\n            </form>\n        )\n    }\n\n    Header(){\n        return(\n            <div className=\"PopUpWindowHeader\">\n                <h2>Add a new Item to the list</h2>\n            </div>\n\n        )\n    }\n\n\n\n    render(){\n        return(\n            <div className=\"PopUpWindow\">\n                {this.Header()}\n                <br />\n                {this.FoodNameForm()}\n                <br />\n                {this.RankForm()}\n                <br />\n                {this.NoteForm()}\n                <br />\n                <div className=\"ButtonArray\">\n                    <button type=\"button\" onClick={()=>this.props.addNewItem(this.state)}>submit</button>\n                    <span className='EmptySpace'> </span>\n                    <button type=\"button\" onClick={this.props.OpenClose}> Cancel </button>\n                </div>\n\n            </div>\n    )\n    }\n}\n\nclass EditRankPopup extends React.Component{\n    state = {\n        FoodName: this.props.Info.FoodName,\n        Notes: this.props.Info.Notes,\n        Rank: this.props.Info.Rank\n    }\n    handleChange = (event) => {\n        const target = event.target\n        const value = target.value\n        const name = target.name\n\n        this.setState({\n            [name]: value\n        })\n    }\n\n    Header(){\n        return(\n            <div className=\"PopUpWindowHeader\">\n                <h2>Edit this item</h2>\n            </div>\n\n        )\n    }\n\n    NoteForm(){\n        return(\n            <form className=\"NoteForm\">\n                <label>\n                    <strong>Note:  </strong>\n                    <br/>\n                    <textarea name=\"Notes\" value = {this.state.Notes} className=\"NoteInputBox\"\n                                          onChange={this.handleChange} rows=\"5\" cols=\"10\" wrap=\"soft\">\n                    </textarea>\n                </label>\n            </form>\n        )\n    }\n\n    FoodNameForm(){\n        return(\n            <form className=\"FoodNameForm\">\n                <label>\n                    <strong>Food Name:  </strong>\n                    <input type=\"text\" name=\"FoodName\" value = {this.state.FoodName}\n                           onChange={this.handleChange} className=\"FoodNameInputBox\"\n                    />\n                </label>\n            </form>\n        )\n    }\n\n    render(){\n        return(\n            <div className=\"PopUpWindow\">\n                {this.Header()}\n                <br />\n                {this.FoodNameForm()}\n                <br />\n                {this.NoteForm()}\n                <br />\n                <div className=\"ButtonArray\">\n                    <button type=\"button\" onClick={()=>this.props.editItem(this.state)}>submit</button>\n                    <span className='EmptySpace'> </span>\n                    <button type=\"button\" onClick={this.props.OpenClose}> Cancel </button>\n                </div>\n            </div>\n        )\n    }\n}\n\nclass EditDescription extends React.Component{\n    state = {\n        Description: this.props.Description\n    }\n\n    handleChange = (event) => {\n        const target = event.target\n        const value = target.value\n        const name = target.name\n\n        this.setState({\n            [name]: value\n        })\n    }\n\n    Header(){\n        return(\n            <div className=\"PopUpWindowHeader\">\n                <h2>Edit List Description</h2>\n            </div>\n        )\n    }\n\n    DescriptionForm(){\n        return(\n            <form className=\"DescriptionForm\">\n                <label>\n                    <strong>New description:  </strong>\n                    <br/>\n                    <br/>\n                    <textarea name=\"Description\" value = {this.state.Description}\n                              onChange={this.handleChange} className=\"DescriptionInputBox\" rows=\"5\" cols=\"10\" wrap=\"soft\"> </textarea>\n                </label>\n            </form>\n        )\n    }\n\n    render() {\n        return(\n            <div className=\"PopUpWindow\">\n                {this.Header()}\n                <br />\n                {this.DescriptionForm()}\n                <br />\n                <div className=\"ButtonArray\">\n                    <button type=\"button\" onClick={()=>this.props.editDescription(this.state.Description)}>submit</button>\n                    <span className='EmptySpace'> </span>\n                    <button type=\"button\" onClick={this.props.OpenClose}> Cancel </button>\n                </div>\n            </div>\n        )\n    }\n\n}\n\n\nexport default IndividualList;"]},"metadata":{},"sourceType":"module"}