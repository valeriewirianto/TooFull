{"ast":null,"code":"var _jsxFileName = \"/Users/valeriewirianto/University Stuff/309/Group/team50/client/src/Friends.js\";\nimport React from 'react';\nimport './IndividualFriendsUserSetting.css';\nimport { uid } from \"react-uid\";\nimport { Link } from \"react-router-dom\";\nimport { add_existing_friend, delete_existing_friend, delete_potential_friend, get_friend_list, send_friend_request } from \"./actions/friend\";\nimport NavigationBar from './NavigationBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Friends extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ExistingFriendsList: [],\n      PotentialFriendsList: [],\n      ExistingFriendsList_id: [],\n      PotentialFriendsList_id: [],\n      usernameInput: \"\",\n      user: null,\n      friendObject: null,\n      username_exist: \"User exist\"\n    };\n\n    this.deleteFriend = username => {\n      delete_existing_friend(this, username);\n    };\n\n    this.rejectFriend = username => {\n      delete_potential_friend(this, username);\n    };\n\n    this.acceptFriend = username => {\n      add_existing_friend(this, username);\n    };\n  }\n\n  componentDidMount(props) {\n    get_friend_list(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    alert(\"Sending the request\");\n    send_friend_request(this, this.state.usernameInput).then(response => {\n      if (response === \"NOUSER\") {\n        alert(\"NO SUCH USER!\");\n      } else if (response === \"USERONLIST\") {\n        alert(\"The user is either is waiting fror you accept their request or has already been on your friend list \");\n      } else {\n        alert(\"sended!!!\");\n      }\n    });\n  }\n\n  ExistingFriendsRow(username, userid) {\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: {\n            pathname: './profile',\n            state: {\n              edit: false,\n              user: userid\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"UsernameButton\",\n            children: username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"DeleteFriend\",\n          onClick: () => this.deleteFriend(username),\n          children: \" delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, uid(username), true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this);\n  }\n\n  ExistingFriends() {\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      id: \"ExistingFriends\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this), this.state.ExistingFriendsList.map((username, index) => {\n          return this.ExistingFriendsRow(username, this.state.ExistingFriendsList_id[index]);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this);\n  }\n\n  Panel1() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"FriendsPanel1\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"My Friends List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), this.ExistingFriends()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this);\n  }\n\n  PotentialFriendsRow(username, userid) {\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: {\n            pathname: './profile',\n            state: {\n              edit: false,\n              user: userid\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"UsernameButton\",\n            children: username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"AcceptFriend\",\n          onClick: () => this.acceptFriend(username),\n          children: \" Accept! \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"RejectFriend\",\n          onClick: () => this.rejectFriend(username),\n          children: \" NO! \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this)]\n    }, uid(username), true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this);\n  }\n\n  PotentialFriends() {\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      id: \"PotentialFriends\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Accept\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Reject\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 17\n        }, this), this.state.PotentialFriendsList.map((username, index) => {\n          return this.PotentialFriendsRow(username, this.state.PotentialFriendsList_id[index]);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this);\n  }\n\n  Panel2() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"FriendsPanel2\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Who want to be my friends\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this), this.PotentialFriends()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this);\n  }\n\n  SendRequestForm() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"usernameInput\",\n        className: \"input\",\n        value: this.state.usernameInput,\n        onChange: this.handleChange.bind(this),\n        placeholder: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"submitButton\",\n        type: \"button\",\n        value: \"Send the Request\",\n        onClick: this.handleSubmit.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }, this);\n  }\n\n  Panel3() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"FriendsPanel3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Send a Friends Request\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }, this), this.SendRequestForm(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(NavigationBar, {\n        app: this.props.app,\n        history: this.props.history\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }, this), this.Panel1(), this.Panel2(), this.Panel3()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Friends;","map":{"version":3,"sources":["/Users/valeriewirianto/University Stuff/309/Group/team50/client/src/Friends.js"],"names":["React","uid","Link","add_existing_friend","delete_existing_friend","delete_potential_friend","get_friend_list","send_friend_request","NavigationBar","Friends","Component","state","ExistingFriendsList","PotentialFriendsList","ExistingFriendsList_id","PotentialFriendsList_id","usernameInput","user","friendObject","username_exist","deleteFriend","username","rejectFriend","acceptFriend","componentDidMount","props","handleChange","event","setState","target","name","value","handleSubmit","alert","then","response","ExistingFriendsRow","userid","pathname","edit","ExistingFriends","map","index","Panel1","PotentialFriendsRow","PotentialFriends","Panel2","SendRequestForm","bind","Panel3","render","app","history"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './IndividualFriendsUserSetting.css'\nimport {uid} from \"react-uid\";\nimport {Link} from \"react-router-dom\";\nimport {\n    add_existing_friend,\n    delete_existing_friend,\n    delete_potential_friend,\n    get_friend_list,\n    send_friend_request\n} from \"./actions/friend\";\nimport NavigationBar from './NavigationBar'\n\n\nclass Friends extends React.Component{\n    state = {\n        ExistingFriendsList: [],\n        PotentialFriendsList: [],\n        ExistingFriendsList_id: [],\n        PotentialFriendsList_id: [],\n        usernameInput: \"\",\n        user: null,\n        friendObject: null,\n        username_exist : \"User exist\"\n    }\n\n    componentDidMount(props){\n        get_friend_list(this)\n    }\n\n    handleChange(event){\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    handleSubmit(event){\n        alert(\"Sending the request\");\n        send_friend_request(this, this.state.usernameInput).then(response =>{\n            if(response === \"NOUSER\"){\n                alert(\"NO SUCH USER!\")\n            }else if (response === \"USERONLIST\"){\n                alert(\"The user is either is waiting fror you accept their request or has already been on your friend list \")\n            }else{\n                alert(\"sended!!!\")\n            }\n        })\n    }\n\n    deleteFriend = (username) => {\n       delete_existing_friend(this, username)\n    }\n\n    ExistingFriendsRow(username, userid){\n        return(\n            <tr key={uid(username)}>\n                <td>\n                    <Link to={{\n                                pathname: './profile',\n                                state:{\n                                    edit: false,\n                                    user: userid\n                                }\n                              }}>\n                            <button type = \"button\" className=\"UsernameButton\">{username}</button>\n                    </Link>\n\n                </td>\n                <td>\n                    <button type=\"button\" className='DeleteFriend'\n                            onClick = {\n                                () => this.deleteFriend(username)\n                            }\n                    > delete\n                    </button>\n                </td>\n            </tr>\n        )\n    }\n\n\n\n    ExistingFriends() {\n        return (\n            <table id='ExistingFriends'>\n                <tbody>\n                <tr>\n                    <th>username</th>\n                    <th>Delete</th>\n                </tr>\n                {this.state.ExistingFriendsList.map((username, index) => {return this.ExistingFriendsRow(username, this.state.ExistingFriendsList_id[index])})}\n                </tbody>\n            </table>\n        )\n    }\n    Panel1(){\n        return(\n            <div id=\"FriendsPanel1\">\n                <h1>My Friends List</h1>\n                {this.ExistingFriends()}\n            </div>\n        )\n    }\n\n    rejectFriend = (username) => {\n       delete_potential_friend(this, username)\n    }\n\n    acceptFriend = (username) => {\n        add_existing_friend(this,username)\n    }\n\n    PotentialFriendsRow(username, userid){\n        return(\n            <tr key={uid(username)}>\n                <td>\n                    <Link to={{\n                                pathname: './profile',\n                                state:{\n                                    edit: false,\n                                    user: userid\n                                }\n                              }}>\n                            <button type = \"button\" className=\"UsernameButton\">{username}</button>\n                    </Link>\n\n                </td>\n                <td>\n                    <button type=\"button\" className='AcceptFriend'\n                            onClick={\n                                () => this.acceptFriend(username)\n                            }\n                    > Accept! </button>\n                </td>\n                <td>\n                    <button type=\"button\" className='RejectFriend'\n                            onClick={\n                                () => this.rejectFriend(username)\n                            }\n                    > NO! </button>\n                </td>\n            </tr>\n        )\n    }\n\n\n    PotentialFriends(){\n        return (\n            <table id=\"PotentialFriends\">\n                <tbody>\n                <tr>\n                    <th>username</th>\n                    <th>Accept</th>\n                    <th>Reject</th>\n                </tr>\n                {this.state.PotentialFriendsList.map((username, index) => {return this.PotentialFriendsRow(username, this.state.PotentialFriendsList_id[index])})}\n                </tbody>\n            </table>\n        )\n    }\n\n\n    Panel2(){\n        return(\n            <div id=\"FriendsPanel2\">\n                <h1>Who want to be my friends</h1>\n                {this.PotentialFriends()}\n            </div>\n        )\n    }\n\n\n\n    SendRequestForm(){\n        return(\n            <form>\n                <input type=\"text\" name=\"usernameInput\" className=\"input\"\n                       value={this.state.usernameInput} onChange={this.handleChange.bind(this)}\n                       placeholder=\"Username\" />\n                <br/>\n                <input className=\"submitButton\" type=\"button\" value=\"Send the Request\"\n                       onClick={this.handleSubmit.bind(this)}\n                />\n            </form>\n        )\n    }\n\n    Panel3(){\n        return(\n            <div id=\"FriendsPanel3\">\n                <h1>Send a Friends Request</h1>\n                {this.SendRequestForm()}\n\n                <br/>\n            </div>\n        )\n    }\n    render(){\n        return(\n            <div>\n                <NavigationBar app = {this.props.app} history = {this.props.history}/>\n                {/*<Link to={'/Main'}>*/}\n                {/*    <div><button className='back'>Back</button></div>*/}\n                {/*</Link>*/}\n                <hr/>\n                {this.Panel1()}\n                {this.Panel2()}\n                {this.Panel3()}\n            </div>\n        )\n    }\n\n}\nexport default Friends;"]},"metadata":{},"sourceType":"module"}