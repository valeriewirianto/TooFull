{"ast":null,"code":"var _jsxFileName = \"/Users/valeriewirianto/University Stuff/309/Group/team50/client/src/IndividualList.js\";\nimport \"./IndividualFriendsUserSetting.css\";\nimport { uid } from 'react-uid'; // import {Link} from \"react-router-dom\";\n\nimport watermelon from './Stickers/watermelon.png';\nimport donut from './Stickers/donut.png';\nimport pie from './Stickers/pie.png';\nimport broccoli from './Stickers/brocoli.png';\nimport React from \"react\";\nimport ReactHtmlParser from 'react-html-parser';\nimport NavigationBar from './NavigationBar';\nimport { add_item, delete_list, get_all_items, delete_item, edit_item, update_list_description } from \"./actions/myList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass IndividualList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ListName: \"Home Grown Ingredients\",\n      Category: \"Ingredients\",\n      ListDescription: \"My favourite ingredients that I grow in my garden\",\n      FoodRank: [],\n      seen: false,\n      seen2: false,\n      seen3: false,\n      info: {},\n      stickers: [{\n        id: 0,\n        source: watermelon\n      }, {\n        id: 1,\n        source: donut\n      }, {\n        id: 2,\n        source: pie\n      }, {\n        id: 3,\n        source: broccoli\n      }],\n      freeStickers: [],\n      selectedImage: null,\n      user: null\n    };\n\n    this.removeFoodRank = Info => {\n      delete_item(this.state.listId, Info._id).then(response => {\n        let filterFoodRank = this.state.FoodRank.filter(check => {\n          return check !== Info;\n        });\n        filterFoodRank.map((R, index) => R.Rank = index + 1);\n        this.setState({\n          FoodRank: filterFoodRank\n        });\n      });\n    };\n\n    this.deleteWholeList = () => {\n      delete_list(this.state.listId).then(response => {\n        if (response === \"success\") {\n          alert(\"List deleted!\");\n          this.props.history.push('/main');\n        }\n      });\n    };\n\n    this.OpenClose = () => {\n      this.setState({\n        seen: !this.state.seen\n      });\n    };\n\n    this.OpenClose2 = () => {\n      this.setState({\n        seen2: !this.state.seen2\n      });\n    };\n\n    this.OpenClose3 = () => {\n      this.setState({\n        seen3: !this.state.seen3\n      });\n    };\n\n    this.editItem = (PopUpState, item_id) => {\n      const foodName = PopUpState.FoodName;\n      const notes = PopUpState.Notes;\n      const rank = PopUpState.Rank;\n      let filterFoodRank = this.state.FoodRank.filter(check => {\n        return check.Rank !== rank;\n      });\n      const editedItem = {\n        Rank: rank,\n        FoodName: foodName,\n        Notes: notes\n      };\n      edit_item(this, this.state.listId, item_id, foodName, notes);\n      this.OpenClose2();\n    };\n\n    this.addNewItem = async PopUpState => {\n      const foodName = PopUpState.FoodName;\n      let rank = PopUpState.Rank; // Basic error handling\n\n      if (PopUpState.FoodName === \"\" || PopUpState.Rank === \"\" || PopUpState.Note === \"\") {\n        alert(\"Please input a value for all fields\");\n        return;\n      } // Max, please check if rank is integer. Im too lazy to google it. Thanks. The below didnt work. strings ew\n      // if (!Number.isInteger(PopUpState.Rank)){\n      //     alert(\"Please input an integer as the rank\")\n      //     return\n      // }\n\n\n      if (!parseInt(PopUpState.Rank)) {\n        alert(\"Please input an integer as the rank\");\n        return;\n      }\n\n      if (PopUpState.Rank < 1) {\n        alert(\"Please enter an integer for rank greater than 0\");\n        return;\n      } // rank greater than  MAX rank in current list\n\n\n      if (this.state.FoodRank.length === 0) {} else if (rank > this.state.FoodRank[this.state.FoodRank.length - 1].rank) {\n        rank = this.state.FoodRank[this.state.FoodRank.length - 1].rank + 1;\n      }\n\n      const note = PopUpState.Note;\n      const newItem = {\n        rank: rank,\n        foodName: foodName,\n        notes: note\n      }; // Add new item and update current FoodRank\n\n      await add_item(this, newItem, this.state.listId);\n      this.OpenClose();\n    };\n\n    this.editDescription = description => {\n      update_list_description(this.state.listId, description).then(res => {\n        this.setState({\n          ListDescription: description\n        });\n      });\n      this.OpenClose3();\n    };\n\n    this.changeEditingRank = Info => {\n      this.setState({\n        info: Info\n      });\n      this.OpenClose2();\n    };\n\n    this.click = event => {\n      const target = event.target;\n      const type = target.type;\n      const className = target.className;\n\n      if (className === 'freeSticker') {\n        const targetID = target.id;\n        this.deleteFreeSticker(targetID);\n      }\n\n      if (type !== 'button' && this.state.selectedImage != null && className !== 'sticker') {\n        let x = event.clientX;\n        let y = event.clientY;\n        const length = this.state.freeStickers.length;\n        let ID = 0;\n\n        if (length !== 0) {\n          ID = this.state.freeStickers[length - 1].id + 1;\n        }\n\n        const freeSticker = {\n          id: ID,\n          location: [x, y],\n          source: this.state.selectedImage\n        };\n        let existingFreeStickers = this.state.freeStickers;\n        existingFreeStickers.push(freeSticker);\n        this.setState({\n          freeStickers: existingFreeStickers,\n          selectedImage: null\n        });\n      }\n    };\n\n    this.selectImage = event => {\n      event.preventDefault();\n      console.log(\"I am selecting a sticker\");\n      const target = event.target;\n      const source = target.src;\n      console.log(source);\n      this.setState({\n        selectedImage: source\n      });\n    };\n  }\n\n  componentDidMount(props) {\n    const {\n      listId,\n      user\n    } = this.props.location.state;\n    this.state.listId = listId;\n    this.state.user = user; //if user = visitor, do not show add item, delete item, edit description, edit item, etc buttons. If user = me, show buttons\n\n    console.log(this.state.user);\n    get_all_items(this, listId);\n  }\n\n  ListDescription() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"ListDescription\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"List Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.state.ListDescription\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this);\n  }\n\n  Header() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"HeaderIndividualList\",\n      children: [/*#__PURE__*/_jsxDEV(NavigationBar, {\n        app: this.props.app,\n        history: this.props.history\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: this.state.ListName + \"(\" + this.state.Category + \")\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this), this.state.user === \"me\" ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"AddNewItem\",\n        onClick: this.OpenClose,\n        children: \" Add a new list item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 45\n      }, this) : null, this.state.seen ? /*#__PURE__*/_jsxDEV(NewRankPopup, {\n        addNewItem: this.addNewItem,\n        OpenClose: this.OpenClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 36\n      }, this) : null, this.state.seen2 ? /*#__PURE__*/_jsxDEV(EditRankPopup, {\n        OpenClose: this.OpenClose2,\n        Info: this.state.info,\n        editItem: this.editItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 37\n      }, this) : null, this.state.seen3 ? /*#__PURE__*/_jsxDEV(EditDescription, {\n        editDescription: this.editDescription,\n        OpenClose: this.OpenClose3,\n        Description: this.state.ListDescription\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 37\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"EmptySpace\",\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this), this.state.user === \"me\" ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"DeleteWholeList\",\n        onClick: this.deleteWholeList,\n        children: \" Delete the whole list \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 45\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"EmptySpace\",\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }, this), this.state.user === \"me\" ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"EditDescription\",\n        onClick: this.OpenClose3,\n        children: \" Edit Description \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 45\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }, this);\n  }\n\n  TableRow(info) {\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: info.rank\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: info.foodName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: info.notes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }, this), this.state.user === \"me\" ? /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"editIndividualList\",\n          onClick: () => this.changeEditingRank(info),\n          children: \" edit \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 25\n      }, this) : null, this.state.user === \"me\" ? /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"deleteIndividualList\",\n          onClick: () => this.removeFoodRank(info),\n          children: \" delete \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 25\n      }, this) : null]\n    }, uid(info), true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }, this);\n  }\n\n  Table() {\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Rank\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"FoodName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Notes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 21\n          }, this), this.state.user === \"me\" ? /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 50\n          }, this) : null, this.state.user === \"me\" ? /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 50\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 17\n        }, this), this.state.FoodRank.map(info => {\n          return this.TableRow(info);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 13\n    }, this);\n  }\n\n  deleteFreeSticker(id) {\n    console.log(\"Deleteing\");\n    const freeStickers = this.state.freeStickers;\n    let filtered = freeStickers.filter(fs => fs.id.toString() !== id);\n    console.log(filtered);\n    this.setState({\n      freeStickers: filtered\n    });\n  }\n\n  freeSticker(fs) {\n    const id = fs.id;\n    const stringID = id.toString();\n    const source = fs.source;\n    const x = fs.location[0];\n    const y = fs.location[1];\n    let left = x - 25 + 'px';\n    let top = y - 25 + 'px';\n    let sticker = document.createElement(\"IMG\");\n    sticker.src = source;\n    sticker.alt = \"iamge not found\";\n    sticker.key = uid(fs);\n    sticker.id = stringID;\n    sticker.className = 'freeSticker';\n    sticker.style.left = left;\n    sticker.style.top = top;\n    sticker.style.position = \"absolute\";\n    return ReactHtmlParser(sticker.outerHTML);\n  }\n\n  FreeStickers() {\n    const freeStickers = this.state.freeStickers;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: freeStickers.map(fs => this.freeSticker(fs))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 17\n    }, this);\n  }\n\n  sticker(s) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stickerDiv\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: this.state.stickers[s.id].source,\n        alt: \"No image\",\n        className: \"sticker\",\n        onClick: this.selectImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"EmptySpace\",\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 17\n      }, this)]\n    }, uid(s), true, {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 13\n    }, this);\n  }\n\n  StickerList() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stickerList\",\n      children: this.state.stickers.map(s => this.sticker(s))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 13\n    }, this);\n  }\n\n  StickerPanel() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"StickerPanel\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \" Choose Your Stickers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" Choose by clicking the image and the position that the sticker should go and deleting by clicking again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 17\n      }, this), this.StickerList(), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Stickers can only go to the header, List Description, item table and sticker panel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 13\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: this.click,\n      children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 17\n      }, this), this.Header(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 17\n      }, this), this.Table(), this.ListDescription(), this.StickerPanel(), this.FreeStickers()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass NewRankPopup extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      FoodName: \"\",\n      Rank: \"\",\n      Note: \"\"\n    };\n\n    this.handleChange = event => {\n      const target = event.target;\n      const value = target.value;\n      const name = target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n  }\n\n  FoodNameForm() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"FoodNameForm\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Food Name:  \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"FoodName\",\n          value: this.state.FoodName,\n          onChange: this.handleChange,\n          className: \"FoodNameInputBox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 13\n    }, this);\n  }\n\n  RankForm() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"RankForm\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Rank:                      \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"Rank\",\n          value: this.state.rank,\n          className: \"RankInputBox\",\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 13\n    }, this);\n  }\n\n  NoteForm() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"NoteForm\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Note:  \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"Note\",\n          value: this.state.Note,\n          className: \"NoteInputBox\",\n          onChange: this.handleChange,\n          rows: \"5\",\n          cols: \"10\",\n          wrap: \"soft\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 13\n    }, this);\n  }\n\n  Header() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"PopUpWindowHeader\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add a new Item to the list\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 13\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"PopUpWindow\",\n      children: [this.Header(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 17\n      }, this), this.FoodNameForm(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 17\n      }, this), this.RankForm(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 17\n      }, this), this.NoteForm(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ButtonArray\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => this.props.addNewItem(this.state),\n          children: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"EmptySpace\",\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: this.props.OpenClose,\n          children: \" Cancel \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass EditRankPopup extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      FoodName: this.props.Info.FoodName,\n      Notes: this.props.Info.Notes,\n      Rank: this.props.Info.Rank\n    };\n\n    this.handleChange = event => {\n      const target = event.target;\n      const value = target.value;\n      const name = target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n  }\n\n  Header() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"PopUpWindowHeader\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Edit this item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 542,\n      columnNumber: 13\n    }, this);\n  }\n\n  NoteForm() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"NoteForm\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Note:  \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"Notes\",\n          value: this.state.Notes,\n          className: \"NoteInputBox\",\n          onChange: this.handleChange,\n          rows: \"5\",\n          cols: \"10\",\n          wrap: \"soft\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 551,\n      columnNumber: 13\n    }, this);\n  }\n\n  FoodNameForm() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"FoodNameForm\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Food Name:  \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"FoodName\",\n          value: this.state.FoodName,\n          onChange: this.handleChange,\n          className: \"FoodNameInputBox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 565,\n      columnNumber: 13\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"PopUpWindow\",\n      children: [this.Header(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 580,\n        columnNumber: 17\n      }, this), this.FoodNameForm(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 582,\n        columnNumber: 17\n      }, this), this.NoteForm(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 584,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ButtonArray\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => this.props.editItem(this.state, this.props.Info._id),\n          children: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 586,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"EmptySpace\",\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 587,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: this.props.OpenClose,\n          children: \" Cancel \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 588,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 585,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 578,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass EditDescription extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      Description: this.props.Description\n    };\n\n    this.handleChange = event => {\n      const target = event.target;\n      const value = target.value;\n      const name = target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n  }\n\n  Header() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"PopUpWindowHeader\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Edit List Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 613,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 612,\n      columnNumber: 13\n    }, this);\n  }\n\n  DescriptionForm() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"DescriptionForm\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"New description:  \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 622,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 623,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 624,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"Description\",\n          value: this.state.description,\n          onChange: this.handleChange,\n          className: \"DescriptionInputBox\",\n          rows: \"5\",\n          cols: \"10\",\n          wrap: \"soft\",\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 625,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 621,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 620,\n      columnNumber: 13\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"PopUpWindow\",\n      children: [this.Header(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 636,\n        columnNumber: 17\n      }, this), this.DescriptionForm(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 638,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ButtonArray\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => this.props.editDescription(this.state.Description),\n          children: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 640,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"EmptySpace\",\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 641,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: this.props.OpenClose,\n          children: \" Cancel \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 642,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 639,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 634,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default IndividualList;","map":{"version":3,"sources":["/Users/valeriewirianto/University Stuff/309/Group/team50/client/src/IndividualList.js"],"names":["uid","watermelon","donut","pie","broccoli","React","ReactHtmlParser","NavigationBar","add_item","delete_list","get_all_items","delete_item","edit_item","update_list_description","IndividualList","Component","state","ListName","Category","ListDescription","FoodRank","seen","seen2","seen3","info","stickers","id","source","freeStickers","selectedImage","user","removeFoodRank","Info","listId","_id","then","response","filterFoodRank","filter","check","map","R","index","Rank","setState","deleteWholeList","alert","props","history","push","OpenClose","OpenClose2","OpenClose3","editItem","PopUpState","item_id","foodName","FoodName","notes","Notes","rank","editedItem","addNewItem","Note","parseInt","length","note","newItem","editDescription","description","res","changeEditingRank","click","event","target","type","className","targetID","deleteFreeSticker","x","clientX","y","clientY","ID","freeSticker","location","existingFreeStickers","selectImage","preventDefault","console","log","src","componentDidMount","Header","app","TableRow","Table","filtered","fs","toString","stringID","left","top","sticker","document","createElement","alt","key","style","position","outerHTML","FreeStickers","s","StickerList","StickerPanel","render","NewRankPopup","handleChange","value","name","FoodNameForm","RankForm","NoteForm","EditRankPopup","EditDescription","Description","DescriptionForm"],"mappings":"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","sourcesContent":["import \"./IndividualFriendsUserSetting.css\";\nimport {uid} from 'react-uid';\n// import {Link} from \"react-router-dom\";\nimport watermelon from './Stickers/watermelon.png'\nimport donut from './Stickers/donut.png'\nimport pie from './Stickers/pie.png'\nimport broccoli from './Stickers/brocoli.png'\nimport React from \"react\";\nimport ReactHtmlParser from 'react-html-parser';\nimport NavigationBar from './NavigationBar'\nimport { add_item, delete_list, get_all_items, delete_item, edit_item, update_list_description } from \"./actions/myList\";\nclass IndividualList extends React.Component{\n\n    state = {\n        ListName: \"Home Grown Ingredients\",\n        Category: \"Ingredients\",\n        ListDescription: \"My favourite ingredients that I grow in my garden\",\n        FoodRank: [],\n        seen: false,\n        seen2: false,\n        seen3: false,\n        info: {},\n        stickers: [{id:0, source: watermelon}, {id: 1, source: donut}, {id:2, source: pie}, {id: 3, source: broccoli}],\n        freeStickers: [],\n        selectedImage : null,\n        user: null\n    }\n\n    componentDidMount(props){\n        const { listId, user } = this.props.location.state\n        this.state.listId = listId\n        this.state.user = user //if user = visitor, do not show add item, delete item, edit description, edit item, etc buttons. If user = me, show buttons\n        console.log(this.state.user)\n        get_all_items (this, listId)\n    }\n\n    ListDescription(){\n        return(\n            <div id='ListDescription'>\n                <h2>List Description</h2>\n                <p>{this.state.ListDescription}</p>\n            </div>\n        )\n    }\n\n    removeFoodRank = (Info) => {\n\n        delete_item(this.state.listId, Info._id).then(response =>{\n            let filterFoodRank = this.state.FoodRank.filter(\n                (check) =>{\n                    return check !== Info\n                }\n            )\n    \n            filterFoodRank.map((R, index)=> R.Rank = index + 1)\n    \n            this.setState(\n                {\n                    FoodRank: filterFoodRank\n                }\n            )\n        })\n\n    }\n\n    deleteWholeList = ()=>{\n        delete_list(this.state.listId).then(response =>{\n            if(response === \"success\"){\n                alert(\"List deleted!\")\n                this.props.history.push('/main')\n            }\n        })\n    }\n\n    OpenClose =()=>{\n        this.setState({\n            seen: !this.state.seen\n        })\n    }\n\n    OpenClose2 =()=>{\n        this.setState({\n            seen2: !this.state.seen2\n        })\n    }\n\n    OpenClose3 =()=>{\n        this.setState({\n            seen3: !this.state.seen3\n        })\n    }\n\n    editItem = (PopUpState, item_id)=>{\n        const foodName = PopUpState.FoodName\n        const notes = PopUpState.Notes\n        const rank = PopUpState.Rank\n\n        let filterFoodRank = this.state.FoodRank.filter(\n            (check) =>{\n                return check.Rank !== rank\n            }\n        )\n\n        const editedItem = {\n            Rank: rank,\n            FoodName: foodName,\n            Notes: notes\n        }\n\n        edit_item(this, this.state.listId, item_id, foodName, notes)\n\n        this.OpenClose2()\n\n\n    }\n\n    addNewItem = async (PopUpState)=>{\n        const foodName = PopUpState.FoodName\n        let rank = PopUpState.Rank\n        \n        // Basic error handling\n        if (PopUpState.FoodName === \"\" || PopUpState.Rank === \"\" || PopUpState.Note === \"\"){\n            alert(\"Please input a value for all fields\")\n            return\n        }\n\n        // Max, please check if rank is integer. Im too lazy to google it. Thanks. The below didnt work. strings ew\n        // if (!Number.isInteger(PopUpState.Rank)){\n        //     alert(\"Please input an integer as the rank\")\n        //     return\n        // }\n\n        if (!parseInt(PopUpState.Rank)){\n            alert(\"Please input an integer as the rank\")\n            return\n        }\n\n\n        if (PopUpState.Rank < 1){\n            alert(\"Please enter an integer for rank greater than 0\")\n            return\n        }\n\n        // rank greater than  MAX rank in current list\n        if (this.state.FoodRank.length === 0){\n\n        }\n        else if(rank > this.state.FoodRank[this.state.FoodRank.length - 1].rank){\n            rank = this.state.FoodRank[this.state.FoodRank.length - 1].rank + 1\n        }\n\n        const note = PopUpState.Note\n        const newItem = {\n            rank: rank,\n            foodName: foodName,\n            notes: note\n        }\n\n        // Add new item and update current FoodRank\n        await add_item(this, newItem, this.state.listId)\n\n        this.OpenClose()\n    }\n\n    editDescription = (description) => {\n        update_list_description(this.state.listId, description).then(res =>{\n            this.setState(\n                {\n                    ListDescription: description\n                }\n            )\n        })\n        this.OpenClose3()\n    }\n\n    Header(){\n        return(\n            <div id='HeaderIndividualList'>\n                <NavigationBar app = {this.props.app} history = {this.props.history}/>\n                <h1>{this.state.ListName + \"(\" + this.state.Category + \")\"}</h1>\n                {this.state.user === \"me\" ? <button type=\"button\" className='AddNewItem' onClick={this.OpenClose}> Add a new list item</button> : null}\n                {/*<button type=\"button\" className='AddNewItem' onClick={this.OpenClose}> Add a new list item</button>*/}\n                {this.state.seen ? <NewRankPopup addNewItem={this.addNewItem} OpenClose={this.OpenClose} /> : null}\n                {this.state.seen2 ? <EditRankPopup OpenClose={this.OpenClose2} Info= {this.state.info}\n                                                   editItem={this.editItem}\n                /> : null}\n                {this.state.seen3 ? <EditDescription editDescription={this.editDescription} OpenClose={this.OpenClose3}\n                                                     Description = {this.state.ListDescription}\n                /> : null}\n                <span className='EmptySpace'> </span>\n                {this.state.user === \"me\" ? <button type=\"button\" className='DeleteWholeList' onClick={this.deleteWholeList}> Delete the whole list </button> : null}\n                {/*<button type=\"button\" className='DeleteWholeList' onClick={this.deleteWholeList}> Delete the whole list </button>*/}\n                <span className='EmptySpace'> </span>\n                {this.state.user === \"me\" ? <button type=\"button\" className='EditDescription' onClick={(this.OpenClose3)}> Edit Description </button> : null}\n                {/*<button type=\"button\" className='EditDescription' onClick={(this.OpenClose3)}> Edit Description </button>*/}\n\n            </div>\n        )\n    }\n\n\n    changeEditingRank = (Info)=> {\n        this.setState(\n            {\n                info: Info\n            }\n        )\n        this.OpenClose2()\n    }\n\n    TableRow(info){\n        return(\n            <tr key={uid(info)}>\n                <td>\n                    <strong>{info.rank}</strong>\n                </td>\n                <td>\n                    <strong>{info.foodName}</strong>\n                </td>\n                <td>\n                    <strong>{info.notes}</strong>\n                </td>\n                {\n                    this.state.user === \"me\" ?\n                        <td>\n                            <button type=\"button\" className='editIndividualList'\n                                    onClick={() => this.changeEditingRank(info)}\n                            > edit </button>\n                        </td> : null\n                }\n                {\n                    this.state.user === \"me\" ?\n                        <td>\n                            <button type=\"button\" className='deleteIndividualList'\n                                    onClick = {\n                                        () => this.removeFoodRank(info)\n                                    }\n                            > delete </button>\n                        </td> : null\n                }\n                {/*<td>*/}\n                {/*    <button type=\"button\" className='editIndividualList'*/}\n                {/*            onClick={() => this.changeEditingRank(info)}*/}\n                {/*    > edit </button>*/}\n                {/*</td>*/}\n                {/*<td>*/}\n                {/*    <button type=\"button\" className='deleteIndividualList'*/}\n                {/*            onClick = {*/}\n                {/*                () => this.removeFoodRank(info)*/}\n                {/*            }*/}\n                {/*    > delete </button>*/}\n                {/*</td>*/}\n            </tr>\n        )\n    }\n\n\n    Table(){\n        return(\n            <table>\n                <tbody>\n                <tr>\n                    <th>Rank</th>\n                    <th>FoodName</th>\n                    <th>Notes</th>\n                    {this.state.user === \"me\" ?  <th>Edit</th>: null}\n                    {/*<th>Edit</th>*/}\n                    {this.state.user === \"me\" ?  <th>Delete</th>: null}\n                    {/*<th>Delete</th>*/}\n                </tr>\n                {this.state.FoodRank.map(info => {return this.TableRow(info)})}\n                </tbody>\n            </table>\n        )\n    }\n\n\n\n\n    deleteFreeSticker(id){\n        console.log(\"Deleteing\")\n        const freeStickers = this.state.freeStickers\n        let filtered = freeStickers.filter(fs => fs.id.toString() !== id)\n        console.log(filtered)\n        this.setState({\n            freeStickers: filtered\n        })\n    }\n\n\n\n    click = (event)=>{\n        const target = event.target\n        const type = target.type\n        const className = target.className\n\n        if(className === 'freeSticker'){\n            const targetID = target.id\n            this.deleteFreeSticker(targetID)\n        }\n\n        if (type !== 'button' && this.state.selectedImage != null && className !== 'sticker'){\n            let x = event.clientX\n            let y = event.clientY\n            const length = this.state.freeStickers.length\n            let ID = 0\n            if (length !== 0){\n                ID = this.state.freeStickers[length - 1].id + 1\n            }\n            const freeSticker = {\n                id: ID,\n                location: [x, y],\n                source: this.state.selectedImage\n            }\n            let existingFreeStickers = this.state.freeStickers\n            existingFreeStickers.push(freeSticker)\n            this.setState({\n                freeStickers: existingFreeStickers,\n                selectedImage: null\n\n            })\n\n        }\n    }\n\n    freeSticker(fs) {\n        const id = fs.id\n        const stringID = id.toString()\n        const source = fs.source\n        const x = fs.location[0]\n        const y = fs.location[1]\n        let left = (x - 25)+ 'px';\n        let top = (y - 25) + 'px';\n        let sticker = document.createElement(\"IMG\");\n        sticker.src =source\n        sticker.alt = \"iamge not found\"\n        sticker.key = uid(fs)\n        sticker.id = stringID\n        sticker.className = 'freeSticker'\n        sticker.style.left = left\n        sticker.style.top = top\n        sticker.style.position = \"absolute\"\n\n        return (\n            ReactHtmlParser(sticker.outerHTML)\n        )\n\n    }\n\n    FreeStickers(){\n        const freeStickers = this.state.freeStickers\n        return(\n                <div>\n                    { freeStickers.map(fs => this.freeSticker(fs))}\n                </div>\n\n\n                )\n    }\n\n    selectImage= (event)=> {\n        event.preventDefault()\n        console.log(\"I am selecting a sticker\")\n        const target = event.target\n        const source = target.src\n        console.log(source)\n        this.setState({\n            selectedImage: source\n        })\n\n\n    }\n\n    sticker(s){\n\n        return(\n            <div className='stickerDiv' key={uid(s)}>\n                <img src={this.state.stickers[s.id].source } alt='No image'  className='sticker'\n                     onClick={this.selectImage}/>\n                <span className='EmptySpace'> </span>\n            </div>\n\n        )\n    }\n\n\n\n\n\n    StickerList(){\n        return(\n            <div className='stickerList'>\n                {this.state.stickers.map(s => this.sticker(s))}\n\n            </div>\n\n        )\n    }\n\n\n\n    StickerPanel(){\n        return(\n            <div className='StickerPanel'>\n                <h2> Choose Your Stickers</h2>\n                <p> Choose by clicking the image and the position that the sticker should go and deleting by clicking again</p>\n                {this.StickerList()}\n                <p>Stickers can only go to the header, List Description, item table and sticker panel</p>\n            </div>\n        )\n    }\n\n\n\n    render() {\n        return(\n            <div onClick={this.click}>\n                {/*<Link to={'/Main'}>*/}\n                {/*    <div><button className='back'>Back</button></div>*/}\n                {/*</Link>*/}\n                <hr/>\n                {this.Header()}\n                <br/>\n\n                {this.Table()}\n                {this.ListDescription()}\n                {this.StickerPanel()}\n                {this.FreeStickers()}\n\n            </div>\n        )\n    }\n}\n\nclass NewRankPopup extends React.Component{\n    state = {\n        FoodName: \"\",\n        Rank: \"\",\n        Note: \"\"\n    }\n\n    handleChange = (event) => {\n        const target = event.target\n        const value = target.value\n        const name = target.name\n\n        this.setState({\n            [name]: value\n        })\n    }\n\n    FoodNameForm(){\n        return(\n            <form className=\"FoodNameForm\">\n                <label>\n                    <strong>Food Name:  </strong>\n                    <input type=\"text\" name=\"FoodName\" value = {this.state.FoodName}\n                           onChange={this.handleChange} className=\"FoodNameInputBox\"\n                    />\n                </label>\n            </form>\n        )\n    }\n\n    RankForm(){\n        return(\n            <form className=\"RankForm\">\n                <label>\n                    <strong>{\"Rank:                      \"}</strong>\n                    <input type=\"text\" name=\"Rank\" value = {this.state.rank} className=\"RankInputBox\"\n                           onChange={this.handleChange}\n                    />\n                </label>\n            </form>\n        )\n    }\n    NoteForm(){\n        return(\n            <form className=\"NoteForm\">\n                <label>\n                    <strong>Note:  </strong>\n                    <br/>\n                    <textarea  name=\"Note\" value = {this.state.Note} className=\"NoteInputBox\"\n                               onChange={this.handleChange} rows=\"5\" cols=\"10\" wrap=\"soft\">\n                    </textarea>\n                </label>\n            </form>\n        )\n    }\n\n    Header(){\n        return(\n            <div className=\"PopUpWindowHeader\">\n                <h2>Add a new Item to the list</h2>\n            </div>\n\n        )\n    }\n\n\n\n    render(){\n        return(\n            <div className=\"PopUpWindow\">\n                {this.Header()}\n                <br />\n                {this.FoodNameForm()}\n                <br />\n                {this.RankForm()}\n                <br />\n                {this.NoteForm()}\n                <br />\n                <div className=\"ButtonArray\">\n                    <button type=\"button\" onClick={()=>this.props.addNewItem(this.state)}>submit</button>\n                    <span className='EmptySpace'> </span>\n                    <button type=\"button\" onClick={this.props.OpenClose}> Cancel </button>\n                </div>\n\n            </div>\n    )\n    }\n}\n\nclass EditRankPopup extends React.Component{\n    state = {\n        FoodName: this.props.Info.FoodName,\n        Notes: this.props.Info.Notes,\n        Rank: this.props.Info.Rank\n    }\n    handleChange = (event) => {\n        const target = event.target\n        const value = target.value\n        const name = target.name\n\n        this.setState({\n            [name]: value\n        })\n    }\n\n    Header(){\n        return(\n            <div className=\"PopUpWindowHeader\">\n                <h2>Edit this item</h2>\n            </div>\n\n        )\n    }\n\n    NoteForm(){\n        return(\n            <form className=\"NoteForm\">\n                <label>\n                    <strong>Note:  </strong>\n                    <br/>\n                    <textarea name=\"Notes\" value = {this.state.Notes} className=\"NoteInputBox\"\n                                          onChange={this.handleChange} rows=\"5\" cols=\"10\" wrap=\"soft\">\n                    </textarea>\n                </label>\n            </form>\n        )\n    }\n\n    FoodNameForm(){\n        return(\n            <form className=\"FoodNameForm\">\n                <label>\n                    <strong>Food Name:  </strong>\n                    <input type=\"text\" name=\"FoodName\" value = {this.state.FoodName}\n                           onChange={this.handleChange} className=\"FoodNameInputBox\"\n                    />\n                </label>\n            </form>\n        )\n    }\n\n    render(){\n        return(\n            <div className=\"PopUpWindow\">\n                {this.Header()}\n                <br />\n                {this.FoodNameForm()}\n                <br />\n                {this.NoteForm()}\n                <br />\n                <div className=\"ButtonArray\">\n                    <button type=\"button\" onClick={()=>this.props.editItem(this.state, this.props.Info._id)}>submit</button>\n                    <span className='EmptySpace'> </span>\n                    <button type=\"button\" onClick={this.props.OpenClose}> Cancel </button>\n                </div>\n            </div>\n        )\n    }\n}\n\nclass EditDescription extends React.Component{\n    state = {\n        Description: this.props.Description\n    }\n\n    handleChange = (event) => {\n        const target = event.target\n        const value = target.value\n        const name = target.name\n\n        this.setState({\n            [name]: value\n        })\n    }\n\n    Header(){\n        return(\n            <div className=\"PopUpWindowHeader\">\n                <h2>Edit List Description</h2>\n            </div>\n        )\n    }\n\n    DescriptionForm(){\n        return(\n            <form className=\"DescriptionForm\">\n                <label>\n                    <strong>New description:  </strong>\n                    <br/>\n                    <br/>\n                    <textarea name=\"Description\" value = {this.state.description}\n                              onChange={this.handleChange} className=\"DescriptionInputBox\" rows=\"5\" cols=\"10\" wrap=\"soft\"> </textarea>\n                </label>\n            </form>\n        )\n    }\n\n    render() {\n        return(\n            <div className=\"PopUpWindow\">\n                {this.Header()}\n                <br />\n                {this.DescriptionForm()}\n                <br />\n                <div className=\"ButtonArray\">\n                    <button type=\"button\" onClick={()=>this.props.editDescription(this.state.Description)}>submit</button>\n                    <span className='EmptySpace'> </span>\n                    <button type=\"button\" onClick={this.props.OpenClose}> Cancel </button>\n                </div>\n            </div>\n        )\n    }\n\n}\n\n\nexport default IndividualList;"]},"metadata":{},"sourceType":"module"}