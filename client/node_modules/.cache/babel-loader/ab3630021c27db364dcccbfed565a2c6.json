{"ast":null,"code":"// environment configutations\nimport ENV from'./../config.js';var API_HOST=ENV.api_host;// Send a request to check if a user is logged in through the session cookie\nexport var checkSession=function checkSession(app){var url=\"\".concat(API_HOST,\"/users/check-session\");if(!ENV.use_frontend_test_user){fetch(url).then(function(res){if(res.status===200){return res.json();}}).then(function(json){if(json&&json.currentUser){app.setState({currentUser:json.currentUser});}}).catch(function(error){app.setState({currentUser:null});console.log(error);});}else{app.setState({currentUser:ENV.user});}};// A function to send a POST request with the user to be logged in\nexport var login=function login(loginComp,app){var request=new Request(\"\".concat(API_HOST,\"/users/login\"),{method:\"post\",body:JSON.stringify(loginComp.state),headers:{Accept:\"application/json, text/plain, */*\",\"Content-Type\":\"application/json\"}});fetch(request).then(function(res){if(res.status===200){return res.json();}}).then(function(json){if(json.currentUser!==undefined){app.setState({currentUser:json.currentUser,admin:json.admin});loginComp.setState({loggedIn:1});}}).catch(function(error){console.log(error);});};// Log out user and destroy session\nexport var logoutUser=function logoutUser(){var url=\"\".concat(API_HOST,\"/users/logout\");return fetch(url).then(function(res){if(res.status===200){return\"success\";}}).catch(function(error){console.log(error);});};","map":{"version":3,"sources":["/Users/valeriewirianto/University Stuff/309/Group/team50/client/src/actions/session.js"],"names":["ENV","API_HOST","api_host","checkSession","app","url","use_frontend_test_user","fetch","then","res","status","json","currentUser","setState","catch","error","console","log","user","login","loginComp","request","Request","method","body","JSON","stringify","state","headers","Accept","undefined","admin","loggedIn","logoutUser"],"mappings":"AAAA;AACA,MAAOA,CAAAA,GAAP,KAAgB,gBAAhB,CACA,GAAMC,CAAAA,QAAQ,CAAGD,GAAG,CAACE,QAArB,CAEA;AACA,MAAO,IAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,GAAD,CAAS,CACjC,GAAMC,CAAAA,GAAG,WAAMJ,QAAN,wBAAT,CAEA,GAAI,CAACD,GAAG,CAACM,sBAAT,CAAiC,CAC7BC,KAAK,CAACF,GAAD,CAAL,CACCG,IADD,CACM,SAAAC,GAAG,CAAI,CACT,GAAIA,GAAG,CAACC,MAAJ,GAAe,GAAnB,CAAwB,CACpB,MAAOD,CAAAA,GAAG,CAACE,IAAJ,EAAP,CACH,CACJ,CALD,EAMCH,IAND,CAMM,SAAAG,IAAI,CAAI,CACV,GAAIA,IAAI,EAAIA,IAAI,CAACC,WAAjB,CAA8B,CAC1BR,GAAG,CAACS,QAAJ,CAAa,CAAED,WAAW,CAAED,IAAI,CAACC,WAApB,CAAb,EACH,CACJ,CAVD,EAWCE,KAXD,CAWO,SAAAC,KAAK,CAAI,CACZX,GAAG,CAACS,QAAJ,CAAa,CAAED,WAAW,CAAE,IAAf,CAAb,EACAI,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACH,CAdD,EAeH,CAhBD,IAgBO,CACHX,GAAG,CAACS,QAAJ,CAAa,CAAED,WAAW,CAAEZ,GAAG,CAACkB,IAAnB,CAAb,EACH,CAEJ,CAvBM,CAyBP;AACA,MAAO,IAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACC,SAAD,CAAYhB,GAAZ,CAAoB,CACrC,GAAMiB,CAAAA,OAAO,CAAG,GAAIC,CAAAA,OAAJ,WAAerB,QAAf,iBAAuC,CACnDsB,MAAM,CAAE,MAD2C,CAEnDC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeN,SAAS,CAACO,KAAzB,CAF6C,CAGnDC,OAAO,CAAE,CACLC,MAAM,CAAE,mCADH,CAEL,eAAgB,kBAFX,CAH0C,CAAvC,CAAhB,CASAtB,KAAK,CAACc,OAAD,CAAL,CACKb,IADL,CACU,SAAAC,GAAG,CAAI,CACT,GAAIA,GAAG,CAACC,MAAJ,GAAe,GAAnB,CAAwB,CACpB,MAAOD,CAAAA,GAAG,CAACE,IAAJ,EAAP,CACH,CACJ,CALL,EAMKH,IANL,CAMU,SAAAG,IAAI,CAAI,CACV,GAAIA,IAAI,CAACC,WAAL,GAAqBkB,SAAzB,CAAoC,CAChC1B,GAAG,CAACS,QAAJ,CAAa,CAAED,WAAW,CAAED,IAAI,CAACC,WAApB,CAAiCmB,KAAK,CAAEpB,IAAI,CAACoB,KAA7C,CAAb,EACAX,SAAS,CAACP,QAAV,CAAmB,CAAEmB,QAAQ,CAAE,CAAZ,CAAnB,EACH,CACJ,CAXL,EAYKlB,KAZL,CAYW,SAAAC,KAAK,CAAI,CACZC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACH,CAdL,EAeH,CAzBM,CA6BP;AACA,MAAO,IAAMkB,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CAC5B,GAAM5B,CAAAA,GAAG,WAAMJ,QAAN,iBAAT,CACI,MAAOM,CAAAA,KAAK,CAACF,GAAD,CAAL,CACNG,IADM,CACD,SAAAC,GAAG,CAAI,CACT,GAAIA,GAAG,CAACC,MAAJ,GAAe,GAAnB,CAAwB,CACpB,MAAO,SAAP,CACH,CACJ,CALM,EAMNI,KANM,CAMA,SAAAC,KAAK,CAAI,CACZC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACH,CARM,CAAP,CAWP,CAbM","sourcesContent":["// environment configutations\nimport ENV from './../config.js'\nconst API_HOST = ENV.api_host\n\n// Send a request to check if a user is logged in through the session cookie\nexport const checkSession = (app) => {\n    const url = `${API_HOST}/users/check-session`;\n\n    if (!ENV.use_frontend_test_user) {\n        fetch(url)\n        .then(res => {\n            if (res.status === 200) {\n                return res.json();\n            }\n        })\n        .then(json => {\n            if (json && json.currentUser) {\n                app.setState({ currentUser: json.currentUser });\n            }\n        })\n        .catch(error => {\n            app.setState({ currentUser: null });\n            console.log(error);\n        });\n    } else {\n        app.setState({ currentUser: ENV.user });\n    }\n    \n};\n\n// A function to send a POST request with the user to be logged in\nexport const login = (loginComp, app) => {\n    const request = new Request(`${API_HOST}/users/login`, {\n        method: \"post\",\n        body: JSON.stringify(loginComp.state),\n        headers: {\n            Accept: \"application/json, text/plain, */*\",\n            \"Content-Type\": \"application/json\"\n        }\n    });\n\n    fetch(request)\n        .then(res => {\n            if (res.status === 200) {\n                return res.json();\n            }\n        })\n        .then(json => {\n            if (json.currentUser !== undefined) {\n                app.setState({ currentUser: json.currentUser, admin: json.admin });\n                loginComp.setState({ loggedIn: 1 })\n            }\n        })\n        .catch(error => {\n            console.log(error);\n        });\n};\n\n\n\n// Log out user and destroy session\nexport const logoutUser = () => {\n    const url = `${API_HOST}/users/logout`;\n        return fetch(url)\n        .then(res => {\n            if (res.status === 200) {\n                return \"success\"\n            }\n        })\n        .catch(error => {\n            console.log(error);\n        });\n    \n    \n};"]},"metadata":{},"sourceType":"module"}